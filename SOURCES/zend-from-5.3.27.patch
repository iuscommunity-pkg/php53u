diff -Nura php-5.3.28/Zend/acinclude.m4 php-5.3.27/Zend/acinclude.m4
--- php-5.3.28/Zend/acinclude.m4	2013-12-10 13:04:57.000000000 -0600
+++ php-5.3.27/Zend/acinclude.m4	2013-07-10 12:43:08.000000000 -0500
@@ -4,7 +4,7 @@
 
 AC_DEFUN([LIBZEND_BISON_CHECK],[
   # we only support certain bison versions
-  bison_version_list="1.28 1.35 1.75 1.875 2.0 2.1 2.2 2.3 2.4 2.4.1 2.4.2 2.4.3 2.5 2.5.1 2.6 2.6.1 2.6.2 2.6.4"
+  bison_version_list="1.28 1.35 1.75 1.875 2.0 2.1 2.2 2.3 2.4 2.4.1 2.4.2 2.4.3 2.5 2.5.1 2.6 2.6.1 2.6.2"
 
   # for standalone build of Zend Engine
   test -z "$SED" && SED=sed
diff -Nura php-5.3.28/Zend/zend_ini_parser.c php-5.3.27/Zend/zend_ini_parser.c
--- php-5.3.28/Zend/zend_ini_parser.c	2013-12-10 14:13:14.000000000 -0600
+++ php-5.3.27/Zend/zend_ini_parser.c	2013-07-10 12:47:19.000000000 -0500
@@ -1,8 +1,10 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
 
-/* Bison implementation for Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
+
+/* Skeleton implementation for Bison's Yacc-like parsers in C
    
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -44,7 +46,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.7"
+#define YYBISON_VERSION "2.4.1"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -58,6 +60,8 @@
 /* Pull parsers.  */
 #define YYPULL 1
 
+/* Using locations.  */
+#define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
 #define yyparse         ini_parse
@@ -68,6 +72,7 @@
 #define yydebug         ini_debug
 #define yynerrs         ini_nerrs
 
+
 /* Copy the first part of user declarations.  */
 
 
@@ -319,13 +324,10 @@
 
 
 
-# ifndef YY_NULL
-#  if defined __cplusplus && 201103L <= __cplusplus
-#   define YY_NULL nullptr
-#  else
-#   define YY_NULL 0
-#  endif
-# endif
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
 
 /* Enabling verbose error messages.  */
 #ifdef YYERROR_VERBOSE
@@ -335,18 +337,12 @@
 # define YYERROR_VERBOSE 0
 #endif
 
-/* In a future release of Bison, this section will be replaced
-   by #include "zend_ini_parser.h".  */
-#ifndef YY_INI_ZEND_ZEND_INI_PARSER_H_INCLUDED
-# define YY_INI_ZEND_ZEND_INI_PARSER_H_INCLUDED
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-#if YYDEBUG
-extern int ini_debug;
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
 #endif
 
+
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -387,6 +383,7 @@
 
 
 
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
 # define YYSTYPE_IS_TRIVIAL 1
@@ -395,22 +392,6 @@
 #endif
 
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int ini_parse (void *YYPARSE_PARAM);
-#else
-int ini_parse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
-int ini_parse (void);
-#else
-int ini_parse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
-
-#endif /* !YY_INI_ZEND_ZEND_INI_PARSER_H_INCLUDED  */
-
 /* Copy the second part of user declarations.  */
 
 
@@ -463,27 +444,27 @@
 #define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
 
 #ifndef YY_
-# if defined YYENABLE_NLS && YYENABLE_NLS
+# if YYENABLE_NLS
 #  if ENABLE_NLS
 #   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
-#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
+#   define YY_(msgid) dgettext ("bison-runtime", msgid)
 #  endif
 # endif
 # ifndef YY_
-#  define YY_(Msgid) Msgid
+#  define YY_(msgid) msgid
 # endif
 #endif
 
 /* Suppress unused-variable warnings by "using" E.  */
 #if ! defined lint || defined __GNUC__
-# define YYUSE(E) ((void) (E))
+# define YYUSE(e) ((void) (e))
 #else
-# define YYUSE(E) /* empty */
+# define YYUSE(e) /* empty */
 #endif
 
 /* Identity function, used to suppress warnings about constant conditions.  */
 #ifndef lint
-# define YYID(N) (N)
+# define YYID(n) (n)
 #else
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
@@ -516,12 +497,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -544,24 +524,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -590,7 +570,23 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined __GNUC__ && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  YYSIZE_T yyi;				\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (YYID (0))
+#  endif
+# endif
 
 /* Relocate STACK from its old location to the new one.  The
    local variables YYSIZE and YYSTACKSIZE give the old and new number of
@@ -610,26 +606,6 @@
 
 #endif
 
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
-/* Copy COUNT objects from SRC to DST.  The source and destination do
-   not overlap.  */
-# ifndef YYCOPY
-#  if defined __GNUC__ && 1 < __GNUC__
-#   define YYCOPY(Dst, Src, Count) \
-      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
-#  else
-#   define YYCOPY(Dst, Src, Count)              \
-      do                                        \
-        {                                       \
-          YYSIZE_T yyi;                         \
-          for (yyi = 0; yyi < (Count); yyi++)   \
-            (Dst)[yyi] = (Src)[yyi];            \
-        }                                       \
-      while (YYID (0))
-#  endif
-# endif
-#endif /* !YYCOPY_NEEDED */
-
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  2
 /* YYLAST -- Last index in YYTABLE.  */
@@ -725,7 +701,7 @@
 };
 #endif
 
-#if YYDEBUG || YYERROR_VERBOSE || 0
+#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
 /* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
    First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
 static const char *const yytname[] =
@@ -739,7 +715,7 @@
   "$accept", "statement_list", "statement", "section_string_or_value",
   "string_or_value", "option_offset", "encapsed_list",
   "var_string_list_section", "var_string_list", "expr", "cfg_var_ref",
-  "constant_literal", "constant_string", YY_NULL
+  "constant_literal", "constant_string", 0
 };
 #endif
 
@@ -776,8 +752,8 @@
        1,     1,     1,     1,     1,     1,     1,     1,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -820,7 +796,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -837,12 +814,6 @@
        0,     0,     4,     5,     0,    47,     0,    68,     0,     6
 };
 
-#define yypact_value_is_default(Yystate) \
-  (!!((Yystate) == (-36)))
-
-#define yytable_value_is_error(Yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        3,    25,    37,    38,     4,     5,     6,     7,     8,    33,
@@ -883,50 +854,78 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
-#define YYBACKUP(Token, Value)                                  \
-do                                                              \
-  if (yychar == YYEMPTY)                                        \
-    {                                                           \
-      yychar = (Token);                                         \
-      yylval = (Value);                                         \
-      YYPOPSTACK (yylen);                                       \
-      yystate = *yyssp;                                         \
-      goto yybackup;                                            \
-    }                                                           \
-  else                                                          \
-    {                                                           \
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
+      YYPOPSTACK (1);						\
+      goto yybackup;						\
+    }								\
+  else								\
+    {								\
       yyerror (YY_("syntax error: cannot back up")); \
       YYERROR;							\
     }								\
 while (YYID (0))
 
-/* Error token number */
+
 #define YYTERROR	1
 #define YYERRCODE	256
 
 
-/* This macro is provided for backward compatibility. */
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (YYID (N))                                                    \
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (YYID (0))
+#endif
+
+
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
+
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
 /* YYLEX -- calling `yylex' with the right arguments.  */
+
 #ifdef YYLEX_PARAM
 # define YYLEX yylex (&yylval, YYLEX_PARAM)
 #else
@@ -976,8 +975,6 @@
     YYSTYPE const * const yyvaluep;
 #endif
 {
-  FILE *yyo = yyoutput;
-  YYUSE (yyo);
   if (!yyvaluep)
     return;
 # ifdef YYPRINT
@@ -989,7 +986,7 @@
   switch (yytype)
     {
       default:
-        break;
+	break;
     }
 }
 
@@ -1115,6 +1112,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1217,145 +1215,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = YY_NULL;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                {
-                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
-                  if (! (yysize <= yysize1
-                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                    return 2;
-                  yysize = yysize1;
-                }
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  {
-    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
-    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-      return 2;
-    yysize = yysize1;
-  }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1384,16 +1352,32 @@
     {
 
       default:
-        break;
+	break;
     }
 }
 
+/* Prevent warnings from -Wmissing-prototypes.  */
+#ifdef YYPARSE_PARAM
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void *YYPARSE_PARAM);
+#else
+int yyparse ();
+#endif
+#else /* ! YYPARSE_PARAM */
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void);
+#else
+int yyparse ();
+#endif
+#endif /* ! YYPARSE_PARAM */
+
 
 
 
-/*----------.
-| yyparse.  |
-`----------*/
+
+/*-------------------------.
+| yyparse or yypush_parse.  |
+`-------------------------*/
 
 #ifdef YYPARSE_PARAM
 #if (defined __STDC__ || defined __C99__FUNC__ \
@@ -1420,31 +1404,8 @@
 /* The lookahead symbol.  */
 int yychar;
 
-
-#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
-/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
-    _Pragma ("GCC diagnostic push") \
-    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
-    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
-# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
-    _Pragma ("GCC diagnostic pop")
-#else
-/* Default value used for initialization, for pacifying older GCCs
-   or non-GCC compilers.  */
-static YYSTYPE yyval_default;
-# define YY_INITIAL_VALUE(Value) = Value
-#endif
-#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_END
-#endif
-#ifndef YY_INITIAL_VALUE
-# define YY_INITIAL_VALUE(Value) /* Nothing. */
-#endif
-
 /* The semantic value of the lookahead symbol.  */
-YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);
+YYSTYPE yylval;
 
     /* Number of syntax errors so far.  */
     int yynerrs;
@@ -1457,7 +1418,7 @@
        `yyss': related to states.
        `yyvs': related to semantic values.
 
-       Refer to the stacks through separate pointers, to allow yyoverflow
+       Refer to the stacks thru separate pointers, to allow yyoverflow
        to reallocate them elsewhere.  */
 
     /* The state stack.  */
@@ -1475,7 +1436,7 @@
   int yyn;
   int yyresult;
   /* Lookahead token as an internal (translated) token number.  */
-  int yytoken = 0;
+  int yytoken;
   /* The variables used to return semantic value and location from the
      action routines.  */
   YYSTYPE yyval;
@@ -1493,8 +1454,9 @@
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yyssp = yyss = yyssa;
-  yyvsp = yyvs = yyvsa;
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
   yystacksize = YYINITDEPTH;
 
   YYDPRINTF ((stderr, "Starting parse\n"));
@@ -1503,6 +1465,14 @@
   yyerrstatus = 0;
   yynerrs = 0;
   yychar = YYEMPTY; /* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+  yyssp = yyss;
+  yyvsp = yyvs;
+
   goto yysetstate;
 
 /*------------------------------------------------------------.
@@ -1594,7 +1564,7 @@
 
   /* First try to decide what to do without reference to lookahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
   /* Not known => get a lookahead token if don't already have one.  */
@@ -1625,8 +1595,8 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
@@ -1643,9 +1613,7 @@
   yychar = YYEMPTY;
 
   yystate = yyn;
-  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
   *++yyvsp = yylval;
-  YY_IGNORE_MAYBE_UNINITIALIZED_END
 
   goto yynewstate;
 
@@ -1926,17 +1894,6 @@
 
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1964,10 +1921,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1975,36 +1928,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -2063,7 +2017,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -2086,9 +2040,7 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
-  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
   *++yyvsp = yylval;
-  YY_IGNORE_MAYBE_UNINITIALIZED_END
 
 
   /* Shift the error token.  */
@@ -2112,7 +2064,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined yyoverflow || YYERROR_VERBOSE
+#if !defined(yyoverflow) || YYERROR_VERBOSE
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -2124,13 +2076,8 @@
 
 yyreturn:
   if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -2154,3 +2101,4 @@
 }
 
 
+
diff -Nura php-5.3.28/Zend/zend_ini_parser.h php-5.3.27/Zend/zend_ini_parser.h
--- php-5.3.28/Zend/zend_ini_parser.h	2013-12-10 14:13:14.000000000 -0600
+++ php-5.3.27/Zend/zend_ini_parser.h	2013-07-10 12:47:19.000000000 -0500
@@ -1,8 +1,10 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
 
-/* Bison interface for Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
+
+/* Skeleton interface for Bison's Yacc-like parsers in C
    
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -30,15 +32,6 @@
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-#ifndef YY_INI_ZEND_ZEND_INI_PARSER_H_INCLUDED
-# define YY_INI_ZEND_ZEND_INI_PARSER_H_INCLUDED
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-#if YYDEBUG
-extern int ini_debug;
-#endif
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -80,6 +73,7 @@
 
 
 
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
 # define YYSTYPE_IS_TRIVIAL 1
@@ -88,18 +82,5 @@
 #endif
 
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int ini_parse (void *YYPARSE_PARAM);
-#else
-int ini_parse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
-int ini_parse (void);
-#else
-int ini_parse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
 
-#endif /* !YY_INI_ZEND_ZEND_INI_PARSER_H_INCLUDED  */
+
diff -Nura php-5.3.28/Zend/zend_ini_parser.output php-5.3.27/Zend/zend_ini_parser.output
--- php-5.3.28/Zend/zend_ini_parser.output	2013-12-10 14:13:14.000000000 -0600
+++ php-5.3.27/Zend/zend_ini_parser.output	2013-07-10 12:47:19.000000000 -0500
@@ -158,7 +158,7 @@
     on left: 43 44 45 46 47, on right: 26 29
 
 
-State 0
+state 0
 
     0 $accept: . statement_list $end
 
@@ -167,7 +167,7 @@
     statement_list  go to state 1
 
 
-State 1
+state 1
 
     0 $accept: statement_list . $end
     1 statement_list: statement_list . statement
@@ -181,14 +181,14 @@
     statement  go to state 7
 
 
-State 2
+state 2
 
     0 $accept: statement_list $end .
 
     $default  accept
 
 
-State 3
+state 3
 
     3 statement: TC_SECTION . section_string_or_value ']'
 
@@ -208,7 +208,7 @@
     constant_literal         go to state 18
 
 
-State 4
+state 4
 
     4 statement: TC_LABEL . '=' string_or_value
     6          | TC_LABEL .
@@ -218,7 +218,7 @@
     $default  reduce using rule 6 (statement)
 
 
-State 5
+state 5
 
     5 statement: TC_OFFSET . option_offset ']' '=' string_or_value
 
@@ -238,63 +238,63 @@
     constant_string  go to state 29
 
 
-State 6
+state 6
 
     7 statement: END_OF_LINE .
 
     $default  reduce using rule 7 (statement)
 
 
-State 7
+state 7
 
     1 statement_list: statement_list statement .
 
     $default  reduce using rule 1 (statement_list)
 
 
-State 8
+state 8
 
    39 constant_literal: TC_RAW .
 
     $default  reduce using rule 39 (constant_literal)
 
 
-State 9
+state 9
 
    38 constant_literal: TC_CONSTANT .
 
     $default  reduce using rule 38 (constant_literal)
 
 
-State 10
+state 10
 
    40 constant_literal: TC_NUMBER .
 
     $default  reduce using rule 40 (constant_literal)
 
 
-State 11
+state 11
 
    41 constant_literal: TC_STRING .
 
     $default  reduce using rule 41 (constant_literal)
 
 
-State 12
+state 12
 
    42 constant_literal: TC_WHITESPACE .
 
     $default  reduce using rule 42 (constant_literal)
 
 
-State 13
+state 13
 
    37 cfg_var_ref: TC_DOLLAR_CURLY . TC_VARNAME '}'
 
     TC_VARNAME  shift, and go to state 30
 
 
-State 14
+state 14
 
    21 var_string_list_section: '"' . encapsed_list '"'
 
@@ -303,14 +303,14 @@
     encapsed_list  go to state 31
 
 
-State 15
+state 15
 
     3 statement: TC_SECTION section_string_or_value . ']'
 
     ']'  shift, and go to state 32
 
 
-State 16
+state 16
 
     8 section_string_or_value: var_string_list_section .
    22 var_string_list_section: var_string_list_section . cfg_var_ref
@@ -331,21 +331,21 @@
     constant_literal  go to state 35
 
 
-State 17
+state 17
 
    19 var_string_list_section: cfg_var_ref .
 
     $default  reduce using rule 19 (var_string_list_section)
 
 
-State 18
+state 18
 
    20 var_string_list_section: constant_literal .
 
     $default  reduce using rule 20 (var_string_list_section)
 
 
-State 19
+state 19
 
     4 statement: TC_LABEL '=' . string_or_value
 
@@ -370,42 +370,42 @@
     constant_string  go to state 29
 
 
-State 20
+state 20
 
    44 constant_string: TC_RAW .
 
     $default  reduce using rule 44 (constant_string)
 
 
-State 21
+state 21
 
    43 constant_string: TC_CONSTANT .
 
     $default  reduce using rule 43 (constant_string)
 
 
-State 22
+state 22
 
    45 constant_string: TC_NUMBER .
 
     $default  reduce using rule 45 (constant_string)
 
 
-State 23
+state 23
 
    46 constant_string: TC_STRING .
 
     $default  reduce using rule 46 (constant_string)
 
 
-State 24
+state 24
 
    47 constant_string: TC_WHITESPACE .
 
     $default  reduce using rule 47 (constant_string)
 
 
-State 25
+state 25
 
    27 var_string_list: '"' . encapsed_list '"'
 
@@ -414,14 +414,14 @@
     encapsed_list  go to state 45
 
 
-State 26
+state 26
 
     5 statement: TC_OFFSET option_offset . ']' '=' string_or_value
 
     ']'  shift, and go to state 46
 
 
-State 27
+state 27
 
    14 option_offset: var_string_list .
    28 var_string_list: var_string_list . cfg_var_ref
@@ -442,28 +442,28 @@
     constant_string  go to state 49
 
 
-State 28
+state 28
 
    25 var_string_list: cfg_var_ref .
 
     $default  reduce using rule 25 (var_string_list)
 
 
-State 29
+state 29
 
    26 var_string_list: constant_string .
 
     $default  reduce using rule 26 (var_string_list)
 
 
-State 30
+state 30
 
    37 cfg_var_ref: TC_DOLLAR_CURLY TC_VARNAME . '}'
 
     '}'  shift, and go to state 50
 
 
-State 31
+state 31
 
    16 encapsed_list: encapsed_list . cfg_var_ref
    17              | encapsed_list . TC_QUOTED_STRING
@@ -476,14 +476,14 @@
     cfg_var_ref  go to state 53
 
 
-State 32
+state 32
 
     3 statement: TC_SECTION section_string_or_value ']' .
 
     $default  reduce using rule 3 (statement)
 
 
-State 33
+state 33
 
    24 var_string_list_section: var_string_list_section '"' . encapsed_list '"'
 
@@ -492,42 +492,42 @@
     encapsed_list  go to state 54
 
 
-State 34
+state 34
 
    22 var_string_list_section: var_string_list_section cfg_var_ref .
 
     $default  reduce using rule 22 (var_string_list_section)
 
 
-State 35
+state 35
 
    23 var_string_list_section: var_string_list_section constant_literal .
 
     $default  reduce using rule 23 (var_string_list_section)
 
 
-State 36
+state 36
 
    11 string_or_value: BOOL_TRUE .
 
     $default  reduce using rule 11 (string_or_value)
 
 
-State 37
+state 37
 
    12 string_or_value: BOOL_FALSE .
 
     $default  reduce using rule 12 (string_or_value)
 
 
-State 38
+state 38
 
    13 string_or_value: END_OF_LINE .
 
     $default  reduce using rule 13 (string_or_value)
 
 
-State 39
+state 39
 
    34 expr: '~' . expr
 
@@ -548,7 +548,7 @@
     constant_string  go to state 29
 
 
-State 40
+state 40
 
    35 expr: '!' . expr
 
@@ -569,7 +569,7 @@
     constant_string  go to state 29
 
 
-State 41
+state 41
 
    36 expr: '(' . expr ')'
 
@@ -590,14 +590,14 @@
     constant_string  go to state 29
 
 
-State 42
+state 42
 
     4 statement: TC_LABEL '=' string_or_value .
 
     $default  reduce using rule 4 (statement)
 
 
-State 43
+state 43
 
    28 var_string_list: var_string_list . cfg_var_ref
    29                | var_string_list . constant_string
@@ -618,7 +618,7 @@
     constant_string  go to state 49
 
 
-State 44
+state 44
 
    10 string_or_value: expr .
    32 expr: expr . '|' expr
@@ -630,7 +630,7 @@
     $default  reduce using rule 10 (string_or_value)
 
 
-State 45
+state 45
 
    16 encapsed_list: encapsed_list . cfg_var_ref
    17              | encapsed_list . TC_QUOTED_STRING
@@ -643,14 +643,14 @@
     cfg_var_ref  go to state 53
 
 
-State 46
+state 46
 
     5 statement: TC_OFFSET option_offset ']' . '=' string_or_value
 
     '='  shift, and go to state 61
 
 
-State 47
+state 47
 
    30 var_string_list: var_string_list '"' . encapsed_list '"'
 
@@ -659,49 +659,49 @@
     encapsed_list  go to state 62
 
 
-State 48
+state 48
 
    28 var_string_list: var_string_list cfg_var_ref .
 
     $default  reduce using rule 28 (var_string_list)
 
 
-State 49
+state 49
 
    29 var_string_list: var_string_list constant_string .
 
     $default  reduce using rule 29 (var_string_list)
 
 
-State 50
+state 50
 
    37 cfg_var_ref: TC_DOLLAR_CURLY TC_VARNAME '}' .
 
     $default  reduce using rule 37 (cfg_var_ref)
 
 
-State 51
+state 51
 
    17 encapsed_list: encapsed_list TC_QUOTED_STRING .
 
     $default  reduce using rule 17 (encapsed_list)
 
 
-State 52
+state 52
 
    21 var_string_list_section: '"' encapsed_list '"' .
 
     $default  reduce using rule 21 (var_string_list_section)
 
 
-State 53
+state 53
 
    16 encapsed_list: encapsed_list cfg_var_ref .
 
     $default  reduce using rule 16 (encapsed_list)
 
 
-State 54
+state 54
 
    16 encapsed_list: encapsed_list . cfg_var_ref
    17              | encapsed_list . TC_QUOTED_STRING
@@ -714,7 +714,7 @@
     cfg_var_ref  go to state 53
 
 
-State 55
+state 55
 
    32 expr: expr . '|' expr
    33     | expr . '&' expr
@@ -723,7 +723,7 @@
     $default  reduce using rule 34 (expr)
 
 
-State 56
+state 56
 
    32 expr: expr . '|' expr
    33     | expr . '&' expr
@@ -732,7 +732,7 @@
     $default  reduce using rule 35 (expr)
 
 
-State 57
+state 57
 
    32 expr: expr . '|' expr
    33     | expr . '&' expr
@@ -743,7 +743,7 @@
     ')'  shift, and go to state 64
 
 
-State 58
+state 58
 
    32 expr: expr '|' . expr
 
@@ -764,7 +764,7 @@
     constant_string  go to state 29
 
 
-State 59
+state 59
 
    33 expr: expr '&' . expr
 
@@ -785,14 +785,14 @@
     constant_string  go to state 29
 
 
-State 60
+state 60
 
    27 var_string_list: '"' encapsed_list '"' .
 
     $default  reduce using rule 27 (var_string_list)
 
 
-State 61
+state 61
 
     5 statement: TC_OFFSET option_offset ']' '=' . string_or_value
 
@@ -817,7 +817,7 @@
     constant_string  go to state 29
 
 
-State 62
+state 62
 
    16 encapsed_list: encapsed_list . cfg_var_ref
    17              | encapsed_list . TC_QUOTED_STRING
@@ -830,21 +830,21 @@
     cfg_var_ref  go to state 53
 
 
-State 63
+state 63
 
    24 var_string_list_section: var_string_list_section '"' encapsed_list '"' .
 
     $default  reduce using rule 24 (var_string_list_section)
 
 
-State 64
+state 64
 
    36 expr: '(' expr ')' .
 
     $default  reduce using rule 36 (expr)
 
 
-State 65
+state 65
 
    32 expr: expr . '|' expr
    32     | expr '|' expr .
@@ -853,7 +853,7 @@
     $default  reduce using rule 32 (expr)
 
 
-State 66
+state 66
 
    32 expr: expr . '|' expr
    33     | expr . '&' expr
@@ -862,14 +862,14 @@
     $default  reduce using rule 33 (expr)
 
 
-State 67
+state 67
 
     5 statement: TC_OFFSET option_offset ']' '=' string_or_value .
 
     $default  reduce using rule 5 (statement)
 
 
-State 68
+state 68
 
    30 var_string_list: var_string_list '"' encapsed_list '"' .
 
diff -Nura php-5.3.28/Zend/zend_language_parser.c php-5.3.27/Zend/zend_language_parser.c
--- php-5.3.28/Zend/zend_language_parser.c	2013-12-10 14:13:14.000000000 -0600
+++ php-5.3.27/Zend/zend_language_parser.c	2013-07-10 12:47:19.000000000 -0500
@@ -1,8 +1,10 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
 
-/* Bison implementation for Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
+
+/* Skeleton implementation for Bison's Yacc-like parsers in C
    
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -44,7 +46,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.7"
+#define YYBISON_VERSION "2.4.1"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -58,6 +60,8 @@
 /* Pull parsers.  */
 #define YYPULL 1
 
+/* Using locations.  */
+#define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
 #define yyparse         zendparse
@@ -68,6 +72,7 @@
 #define yydebug         zenddebug
 #define yynerrs         zendnerrs
 
+
 /* Copy the first part of user declarations.  */
 
 
@@ -119,13 +124,10 @@
 
 
 
-# ifndef YY_NULL
-#  if defined __cplusplus && 201103L <= __cplusplus
-#   define YY_NULL nullptr
-#  else
-#   define YY_NULL 0
-#  endif
-# endif
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
 
 /* Enabling verbose error messages.  */
 #ifdef YYERROR_VERBOSE
@@ -135,18 +137,12 @@
 # define YYERROR_VERBOSE 0
 #endif
 
-/* In a future release of Bison, this section will be replaced
-   by #include "zend_language_parser.h".  */
-#ifndef YY_ZEND_ZEND_ZEND_LANGUAGE_PARSER_H_INCLUDED
-# define YY_ZEND_ZEND_ZEND_LANGUAGE_PARSER_H_INCLUDED
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-#if YYDEBUG
-extern int zenddebug;
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
 #endif
 
+
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -405,6 +401,7 @@
 
 
 
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
 # define YYSTYPE_IS_TRIVIAL 1
@@ -413,22 +410,6 @@
 #endif
 
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int zendparse (void *YYPARSE_PARAM);
-#else
-int zendparse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
-int zendparse (void);
-#else
-int zendparse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
-
-#endif /* !YY_ZEND_ZEND_ZEND_LANGUAGE_PARSER_H_INCLUDED  */
-
 /* Copy the second part of user declarations.  */
 
 
@@ -481,27 +462,27 @@
 #define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
 
 #ifndef YY_
-# if defined YYENABLE_NLS && YYENABLE_NLS
+# if YYENABLE_NLS
 #  if ENABLE_NLS
 #   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
-#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
+#   define YY_(msgid) dgettext ("bison-runtime", msgid)
 #  endif
 # endif
 # ifndef YY_
-#  define YY_(Msgid) Msgid
+#  define YY_(msgid) msgid
 # endif
 #endif
 
 /* Suppress unused-variable warnings by "using" E.  */
 #if ! defined lint || defined __GNUC__
-# define YYUSE(E) ((void) (E))
+# define YYUSE(e) ((void) (e))
 #else
-# define YYUSE(E) /* empty */
+# define YYUSE(e) /* empty */
 #endif
 
 /* Identity function, used to suppress warnings about constant conditions.  */
 #ifndef lint
-# define YYID(N) (N)
+# define YYID(n) (n)
 #else
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
@@ -534,12 +515,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -562,24 +542,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -608,7 +588,23 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined __GNUC__ && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  YYSIZE_T yyi;				\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (YYID (0))
+#  endif
+# endif
 
 /* Relocate STACK from its old location to the new one.  The
    local variables YYSIZE and YYSTACKSIZE give the old and new number of
@@ -628,26 +624,6 @@
 
 #endif
 
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
-/* Copy COUNT objects from SRC to DST.  The source and destination do
-   not overlap.  */
-# ifndef YYCOPY
-#  if defined __GNUC__ && 1 < __GNUC__
-#   define YYCOPY(Dst, Src, Count) \
-      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
-#  else
-#   define YYCOPY(Dst, Src, Count)              \
-      do                                        \
-        {                                       \
-          YYSIZE_T yyi;                         \
-          for (yyi = 0; yyi < (Count); yyi++)   \
-            (Dst)[yyi] = (Src)[yyi];            \
-        }                                       \
-      while (YYID (0))
-#  endif
-# endif
-#endif /* !YYCOPY_NEEDED */
-
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
 /* YYLAST -- Last index in YYTABLE.  */
@@ -977,7 +953,7 @@
 };
 #endif
 
-#if YYDEBUG || YYERROR_VERBOSE || 0
+#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
 /* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
    First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
 static const char *const yytname[] =
@@ -1058,7 +1034,7 @@
   "assignment_list_element", "$@66", "array_pair_list",
   "non_empty_array_pair_list", "encaps_list", "encaps_var", "$@67",
   "encaps_var_offset", "internal_functions_in_yacc", "isset_variables",
-  "$@68", "class_constant", YY_NULL
+  "$@68", "class_constant", 0
 };
 #endif
 
@@ -1190,8 +1166,8 @@
        1,     0,     4,     3,     3
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -1434,7 +1410,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -401
 static const yytype_int16 yytable[] =
 {
@@ -1957,12 +1934,6 @@
      240,   241,   242,   243,   244,   245,   246,     0,   247
 };
 
-#define yypact_value_is_default(Yystate) \
-  (!!((Yystate) == (-563)))
-
-#define yytable_value_is_error(Yytable_value) \
-  (!!((Yytable_value) == (-401)))
-
 static const yytype_int16 yycheck[] =
 {
       23,    24,    26,    26,     4,   114,     4,    26,   403,    26,
@@ -2592,50 +2563,78 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
-#define YYBACKUP(Token, Value)                                  \
-do                                                              \
-  if (yychar == YYEMPTY)                                        \
-    {                                                           \
-      yychar = (Token);                                         \
-      yylval = (Value);                                         \
-      YYPOPSTACK (yylen);                                       \
-      yystate = *yyssp;                                         \
-      goto yybackup;                                            \
-    }                                                           \
-  else                                                          \
-    {                                                           \
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
+      YYPOPSTACK (1);						\
+      goto yybackup;						\
+    }								\
+  else								\
+    {								\
       yyerror (YY_("syntax error: cannot back up")); \
       YYERROR;							\
     }								\
 while (YYID (0))
 
-/* Error token number */
+
 #define YYTERROR	1
 #define YYERRCODE	256
 
 
-/* This macro is provided for backward compatibility. */
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (YYID (N))                                                    \
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (YYID (0))
+#endif
+
+
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
+
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
 /* YYLEX -- calling `yylex' with the right arguments.  */
+
 #ifdef YYLEX_PARAM
 # define YYLEX yylex (&yylval, YYLEX_PARAM)
 #else
@@ -2685,8 +2684,6 @@
     YYSTYPE const * const yyvaluep;
 #endif
 {
-  FILE *yyo = yyoutput;
-  YYUSE (yyo);
   if (!yyvaluep)
     return;
 # ifdef YYPRINT
@@ -2698,7 +2695,7 @@
   switch (yytype)
     {
       default:
-        break;
+	break;
     }
 }
 
@@ -2824,6 +2821,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -2926,145 +2924,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = YY_NULL;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                {
-                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
-                  if (! (yysize <= yysize1
-                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                    return 2;
-                  yysize = yysize1;
-                }
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  {
-    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
-    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-      return 2;
-    yysize = yysize1;
-  }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -3093,16 +3061,32 @@
     {
 
       default:
-        break;
+	break;
     }
 }
 
+/* Prevent warnings from -Wmissing-prototypes.  */
+#ifdef YYPARSE_PARAM
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void *YYPARSE_PARAM);
+#else
+int yyparse ();
+#endif
+#else /* ! YYPARSE_PARAM */
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void);
+#else
+int yyparse ();
+#endif
+#endif /* ! YYPARSE_PARAM */
+
+
 
 
 
-/*----------.
-| yyparse.  |
-`----------*/
+/*-------------------------.
+| yyparse or yypush_parse.  |
+`-------------------------*/
 
 #ifdef YYPARSE_PARAM
 #if (defined __STDC__ || defined __C99__FUNC__ \
@@ -3129,31 +3113,8 @@
 /* The lookahead symbol.  */
 int yychar;
 
-
-#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
-/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
-    _Pragma ("GCC diagnostic push") \
-    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
-    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
-# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
-    _Pragma ("GCC diagnostic pop")
-#else
-/* Default value used for initialization, for pacifying older GCCs
-   or non-GCC compilers.  */
-static YYSTYPE yyval_default;
-# define YY_INITIAL_VALUE(Value) = Value
-#endif
-#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-# define YY_IGNORE_MAYBE_UNINITIALIZED_END
-#endif
-#ifndef YY_INITIAL_VALUE
-# define YY_INITIAL_VALUE(Value) /* Nothing. */
-#endif
-
 /* The semantic value of the lookahead symbol.  */
-YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);
+YYSTYPE yylval;
 
     /* Number of syntax errors so far.  */
     int yynerrs;
@@ -3166,7 +3127,7 @@
        `yyss': related to states.
        `yyvs': related to semantic values.
 
-       Refer to the stacks through separate pointers, to allow yyoverflow
+       Refer to the stacks thru separate pointers, to allow yyoverflow
        to reallocate them elsewhere.  */
 
     /* The state stack.  */
@@ -3184,7 +3145,7 @@
   int yyn;
   int yyresult;
   /* Lookahead token as an internal (translated) token number.  */
-  int yytoken = 0;
+  int yytoken;
   /* The variables used to return semantic value and location from the
      action routines.  */
   YYSTYPE yyval;
@@ -3202,8 +3163,9 @@
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yyssp = yyss = yyssa;
-  yyvsp = yyvs = yyvsa;
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
   yystacksize = YYINITDEPTH;
 
   YYDPRINTF ((stderr, "Starting parse\n"));
@@ -3212,6 +3174,14 @@
   yyerrstatus = 0;
   yynerrs = 0;
   yychar = YYEMPTY; /* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+  yyssp = yyss;
+  yyvsp = yyvs;
+
   goto yysetstate;
 
 /*------------------------------------------------------------.
@@ -3303,7 +3273,7 @@
 
   /* First try to decide what to do without reference to lookahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
   /* Not known => get a lookahead token if don't already have one.  */
@@ -3334,8 +3304,8 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
@@ -3352,9 +3322,7 @@
   yychar = YYEMPTY;
 
   yystate = yyn;
-  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
   *++yyvsp = yylval;
-  YY_IGNORE_MAYBE_UNINITIALIZED_END
 
   goto yynewstate;
 
@@ -5467,17 +5435,6 @@
 
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -5505,10 +5462,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -5516,36 +5469,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -5604,7 +5558,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -5627,9 +5581,7 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
-  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
   *++yyvsp = yylval;
-  YY_IGNORE_MAYBE_UNINITIALIZED_END
 
 
   /* Shift the error token.  */
@@ -5653,7 +5605,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined yyoverflow || YYERROR_VERBOSE
+#if !defined(yyoverflow) || YYERROR_VERBOSE
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -5665,13 +5617,8 @@
 
 yyreturn:
   if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -5705,3 +5652,4 @@
  * indent-tabs-mode: t
  * End:
  */
+
diff -Nura php-5.3.28/Zend/zend_language_parser.h php-5.3.27/Zend/zend_language_parser.h
--- php-5.3.28/Zend/zend_language_parser.h	2013-12-10 14:13:14.000000000 -0600
+++ php-5.3.27/Zend/zend_language_parser.h	2013-07-10 12:47:19.000000000 -0500
@@ -1,8 +1,10 @@
-/* A Bison parser, made by GNU Bison 2.7.  */
 
-/* Bison interface for Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
+
+/* Skeleton interface for Bison's Yacc-like parsers in C
    
-      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -30,15 +32,6 @@
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-#ifndef YY_ZEND_ZEND_ZEND_LANGUAGE_PARSER_H_INCLUDED
-# define YY_ZEND_ZEND_ZEND_LANGUAGE_PARSER_H_INCLUDED
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-#if YYDEBUG
-extern int zenddebug;
-#endif
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -298,6 +291,7 @@
 
 
 
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
 # define YYSTYPE_IS_TRIVIAL 1
@@ -306,18 +300,5 @@
 #endif
 
 
-#ifdef YYPARSE_PARAM
-#if defined __STDC__ || defined __cplusplus
-int zendparse (void *YYPARSE_PARAM);
-#else
-int zendparse ();
-#endif
-#else /* ! YYPARSE_PARAM */
-#if defined __STDC__ || defined __cplusplus
-int zendparse (void);
-#else
-int zendparse ();
-#endif
-#endif /* ! YYPARSE_PARAM */
 
-#endif /* !YY_ZEND_ZEND_ZEND_LANGUAGE_PARSER_H_INCLUDED  */
+
diff -Nura php-5.3.28/Zend/zend_language_parser.output php-5.3.27/Zend/zend_language_parser.output
--- php-5.3.28/Zend/zend_language_parser.output	2013-12-10 14:13:14.000000000 -0600
+++ php-5.3.27/Zend/zend_language_parser.output	2013-07-10 12:47:19.000000000 -0500
@@ -1254,7 +1254,7 @@
     on left: 462 463, on right: 364
 
 
-State 0
+state 0
 
     0 $accept: . start $end
 
@@ -1264,14 +1264,14 @@
     top_statement_list  go to state 2
 
 
-State 1
+state 1
 
     0 $accept: start . $end
 
     $end  shift, and go to state 3
 
 
-State 2
+state 2
 
     1 start: top_statement_list .
     3 top_statement_list: top_statement_list . $@1 top_statement
@@ -1282,14 +1282,14 @@
     $@1  go to state 4
 
 
-State 3
+state 3
 
     0 $accept: start $end .
 
     $default  accept
 
 
-State 4
+state 4
 
     3 top_statement_list: top_statement_list $@1 . top_statement
 
@@ -1402,7 +1402,7 @@
     class_constant                           go to state 110
 
 
-State 5
+state 5
 
   458 internal_functions_in_yacc: T_REQUIRE_ONCE . expr
 
@@ -1479,7 +1479,7 @@
     class_constant                     go to state 110
 
 
-State 6
+state 6
 
   457 internal_functions_in_yacc: T_REQUIRE . expr
 
@@ -1556,14 +1556,14 @@
     class_constant                     go to state 110
 
 
-State 7
+state 7
 
   456 internal_functions_in_yacc: T_EVAL . '(' expr ')'
 
     '('  shift, and go to state 117
 
 
-State 8
+state 8
 
   455 internal_functions_in_yacc: T_INCLUDE_ONCE . expr
 
@@ -1640,7 +1640,7 @@
     class_constant                     go to state 110
 
 
-State 9
+state 9
 
   454 internal_functions_in_yacc: T_INCLUDE . expr
 
@@ -1717,7 +1717,7 @@
     class_constant                     go to state 110
 
 
-State 10
+state 10
 
   292 expr_without_variable: T_PRINT . expr
 
@@ -1794,7 +1794,7 @@
     class_constant                     go to state 110
 
 
-State 11
+state 11
 
   259 expr_without_variable: '+' . expr
 
@@ -1871,7 +1871,7 @@
     class_constant                     go to state 110
 
 
-State 12
+state 12
 
   260 expr_without_variable: '-' . expr
 
@@ -1948,7 +1948,7 @@
     class_constant                     go to state 110
 
 
-State 13
+state 13
 
   261 expr_without_variable: '!' . expr
 
@@ -2025,7 +2025,7 @@
     class_constant                     go to state 110
 
 
-State 14
+state 14
 
   262 expr_without_variable: '~' . expr
 
@@ -2102,7 +2102,7 @@
     class_constant                     go to state 110
 
 
-State 15
+state 15
 
   288 expr_without_variable: '@' . $@49 expr
 
@@ -2111,7 +2111,7 @@
     $@49  go to state 125
 
 
-State 16
+state 16
 
   285 expr_without_variable: T_UNSET_CAST . expr
 
@@ -2188,7 +2188,7 @@
     class_constant                     go to state 110
 
 
-State 17
+state 17
 
   284 expr_without_variable: T_BOOL_CAST . expr
 
@@ -2265,7 +2265,7 @@
     class_constant                     go to state 110
 
 
-State 18
+state 18
 
   283 expr_without_variable: T_OBJECT_CAST . expr
 
@@ -2342,7 +2342,7 @@
     class_constant                     go to state 110
 
 
-State 19
+state 19
 
   282 expr_without_variable: T_ARRAY_CAST . expr
 
@@ -2419,7 +2419,7 @@
     class_constant                     go to state 110
 
 
-State 20
+state 20
 
   281 expr_without_variable: T_STRING_CAST . expr
 
@@ -2496,7 +2496,7 @@
     class_constant                     go to state 110
 
 
-State 21
+state 21
 
   280 expr_without_variable: T_DOUBLE_CAST . expr
 
@@ -2573,7 +2573,7 @@
     class_constant                     go to state 110
 
 
-State 22
+state 22
 
   279 expr_without_variable: T_INT_CAST . expr
 
@@ -2650,7 +2650,7 @@
     class_constant                     go to state 110
 
 
-State 23
+state 23
 
   238 expr_without_variable: T_DEC . rw_variable
 
@@ -2676,7 +2676,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 24
+state 24
 
   236 expr_without_variable: T_INC . rw_variable
 
@@ -2702,7 +2702,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 25
+state 25
 
   223 expr_without_variable: T_CLONE . expr
 
@@ -2779,7 +2779,7 @@
     class_constant                     go to state 110
 
 
-State 26
+state 26
 
   222 expr_without_variable: T_NEW . class_name_reference $@41 ctor_arguments
 
@@ -2802,7 +2802,7 @@
     simple_indirect_reference     go to state 151
 
 
-State 27
+state 27
 
   286 expr_without_variable: T_EXIT . exit_expr
 
@@ -2813,7 +2813,7 @@
     exit_expr  go to state 153
 
 
-State 28
+state 28
 
    38 unticked_statement: T_IF . '(' expr ')' $@5 statement $@6 elseif_list else_single
    41                   | T_IF . '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';'
@@ -2821,21 +2821,21 @@
     '('  shift, and go to state 154
 
 
-State 29
+state 29
 
   342 common_scalar: T_LNUMBER .
 
     $default  reduce using rule 342 (common_scalar)
 
 
-State 30
+state 30
 
   343 common_scalar: T_DNUMBER .
 
     $default  reduce using rule 343 (common_scalar)
 
 
-State 31
+state 31
 
     5 namespace_name: T_STRING .
    34 statement: T_STRING . ':'
@@ -2845,35 +2845,35 @@
     $default  reduce using rule 5 (namespace_name)
 
 
-State 32
+state 32
 
   363 scalar: T_STRING_VARNAME .
 
     $default  reduce using rule 363 (scalar)
 
 
-State 33
+state 33
 
   408 compound_variable: T_VARIABLE .
 
     $default  reduce using rule 408 (compound_variable)
 
 
-State 34
+state 34
 
    64 unticked_statement: T_INLINE_HTML .
 
     $default  reduce using rule 64 (unticked_statement)
 
 
-State 35
+state 35
 
   344 common_scalar: T_CONSTANT_ENCAPSED_STRING .
 
     $default  reduce using rule 344 (common_scalar)
 
 
-State 36
+state 36
 
    63 unticked_statement: T_ECHO . echo_expr_list ';'
 
@@ -2951,7 +2951,7 @@
     class_constant                     go to state 110
 
 
-State 37
+state 37
 
    47 unticked_statement: T_DO . $@11 statement T_WHILE '(' $@12 expr ')' ';'
 
@@ -2960,21 +2960,21 @@
     $@11  go to state 158
 
 
-State 38
+state 38
 
    44 unticked_statement: T_WHILE . '(' $@9 expr ')' $@10 while_statement
 
     '('  shift, and go to state 159
 
 
-State 39
+state 39
 
    51 unticked_statement: T_FOR . '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement
 
     '('  shift, and go to state 160
 
 
-State 40
+state 40
 
    69 unticked_statement: T_FOREACH . '(' variable T_AS $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
    72                   | T_FOREACH . '(' expr_without_variable T_AS $@19 variable foreach_optional_arg ')' $@20 foreach_statement
@@ -2982,7 +2982,7 @@
     '('  shift, and go to state 161
 
 
-State 41
+state 41
 
    74 unticked_statement: T_DECLARE . $@21 '(' declare_list ')' declare_statement
 
@@ -2991,14 +2991,14 @@
     $@21  go to state 162
 
 
-State 42
+state 42
 
    53 unticked_statement: T_SWITCH . '(' expr ')' $@16 switch_case_list
 
     '('  shift, and go to state 163
 
 
-State 43
+state 43
 
    54 unticked_statement: T_BREAK . ';'
    55                   | T_BREAK . expr ';'
@@ -3077,7 +3077,7 @@
     class_constant                     go to state 110
 
 
-State 44
+state 44
 
    56 unticked_statement: T_CONTINUE . ';'
    57                   | T_CONTINUE . expr ';'
@@ -3156,28 +3156,28 @@
     class_constant                     go to state 110
 
 
-State 45
+state 45
 
    83 unticked_statement: T_GOTO . T_STRING ';'
 
     T_STRING  shift, and go to state 168
 
 
-State 46
+state 46
 
   295 function: T_FUNCTION .
 
     $default  reduce using rule 295 (function)
 
 
-State 47
+state 47
 
    25 constant_declaration: T_CONST . T_STRING '=' static_scalar
 
     T_STRING  shift, and go to state 169
 
 
-State 48
+state 48
 
    58 unticked_statement: T_RETURN . ';'
    59                   | T_RETURN . expr_without_variable ';'
@@ -3257,7 +3257,7 @@
     class_constant                     go to state 110
 
 
-State 49
+state 49
 
    81 unticked_statement: T_TRY . $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
@@ -3266,7 +3266,7 @@
     $@22  go to state 174
 
 
-State 50
+state 50
 
    82 unticked_statement: T_THROW . expr ';'
 
@@ -3343,7 +3343,7 @@
     class_constant                     go to state 110
 
 
-State 51
+state 51
 
    16 top_statement: T_USE . use_declarations ';'
 
@@ -3355,7 +3355,7 @@
     use_declaration   go to state 179
 
 
-State 52
+state 52
 
    61 unticked_statement: T_GLOBAL . global_var_list ';'
 
@@ -3366,21 +3366,21 @@
     global_var       go to state 183
 
 
-State 53
+state 53
 
   106 class_entry_type: T_FINAL . T_CLASS
 
     T_CLASS  shift, and go to state 184
 
 
-State 54
+state 54
 
   105 class_entry_type: T_ABSTRACT . T_CLASS
 
     T_CLASS  shift, and go to state 185
 
 
-State 55
+state 55
 
    62 unticked_statement: T_STATIC . static_var_list ';'
   318 class_name: T_STATIC .
@@ -3392,98 +3392,98 @@
     static_var_list  go to state 187
 
 
-State 56
+state 56
 
    66 unticked_statement: T_UNSET . '(' unset_variables ')' ';'
 
     '('  shift, and go to state 188
 
 
-State 57
+state 57
 
   452 internal_functions_in_yacc: T_ISSET . '(' isset_variables ')'
 
     '('  shift, and go to state 189
 
 
-State 58
+state 58
 
   453 internal_functions_in_yacc: T_EMPTY . '(' variable ')'
 
     '('  shift, and go to state 190
 
 
-State 59
+state 59
 
    10 top_statement: T_HALT_COMPILER . '(' ')' ';'
 
     '('  shift, and go to state 191
 
 
-State 60
+state 60
 
   104 class_entry_type: T_CLASS .
 
     $default  reduce using rule 104 (class_entry_type)
 
 
-State 61
+state 61
 
   109 interface_entry: T_INTERFACE .
 
     $default  reduce using rule 109 (interface_entry)
 
 
-State 62
+state 62
 
   216 expr_without_variable: T_LIST . '(' $@39 assignment_list ')' '=' expr
 
     '('  shift, and go to state 192
 
 
-State 63
+state 63
 
   290 expr_without_variable: T_ARRAY . '(' array_pair_list ')'
 
     '('  shift, and go to state 193
 
 
-State 64
+state 64
 
   348 common_scalar: T_CLASS_C .
 
     $default  reduce using rule 348 (common_scalar)
 
 
-State 65
+state 65
 
   349 common_scalar: T_METHOD_C .
 
     $default  reduce using rule 349 (common_scalar)
 
 
-State 66
+state 66
 
   350 common_scalar: T_FUNC_C .
 
     $default  reduce using rule 350 (common_scalar)
 
 
-State 67
+state 67
 
   345 common_scalar: T_LINE .
 
     $default  reduce using rule 345 (common_scalar)
 
 
-State 68
+state 68
 
   346 common_scalar: T_FILE .
 
     $default  reduce using rule 346 (common_scalar)
 
 
-State 69
+state 69
 
   352 common_scalar: T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
   353              | T_START_HEREDOC . T_END_HEREDOC
@@ -3499,7 +3499,7 @@
     encaps_var   go to state 200
 
 
-State 70
+state 70
 
    11 top_statement: T_NAMESPACE . namespace_name ';'
    13              | T_NAMESPACE . namespace_name '{' $@2 top_statement_list '}'
@@ -3515,21 +3515,21 @@
     namespace_name  go to state 203
 
 
-State 71
+state 71
 
   351 common_scalar: T_NS_C .
 
     $default  reduce using rule 351 (common_scalar)
 
 
-State 72
+state 72
 
   347 common_scalar: T_DIR .
 
     $default  reduce using rule 347 (common_scalar)
 
 
-State 73
+state 73
 
   307 function_call: T_NS_SEPARATOR . namespace_name '(' $@53 function_call_parameter_list ')'
   321 class_name: T_NS_SEPARATOR . namespace_name
@@ -3540,7 +3540,7 @@
     namespace_name  go to state 204
 
 
-State 74
+state 74
 
   272 expr_without_variable: '(' . expr ')'
 
@@ -3617,14 +3617,14 @@
     class_constant                     go to state 110
 
 
-State 75
+state 75
 
    75 unticked_statement: ';' .
 
     $default  reduce using rule 75 (unticked_statement)
 
 
-State 76
+state 76
 
    35 unticked_statement: '{' . inner_statement_list '}'
 
@@ -3633,7 +3633,7 @@
     inner_statement_list  go to state 206
 
 
-State 77
+state 77
 
   409 compound_variable: '$' . '{' expr '}'
   420 simple_indirect_reference: '$' .
@@ -3643,7 +3643,7 @@
     $default  reduce using rule 420 (simple_indirect_reference)
 
 
-State 78
+state 78
 
   291 expr_without_variable: '`' . backticks_expr '`'
 
@@ -3659,7 +3659,7 @@
     encaps_var      go to state 200
 
 
-State 79
+state 79
 
   369 scalar: '"' . encaps_list '"'
 
@@ -3672,7 +3672,7 @@
     encaps_var   go to state 200
 
 
-State 80
+state 80
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   303 function_call: namespace_name . '(' $@51 function_call_parameter_list ')'
@@ -3686,14 +3686,14 @@
     $default                reduce using rule 365 (scalar)
 
 
-State 81
+state 81
 
     3 top_statement_list: top_statement_list $@1 top_statement .
 
     $default  reduce using rule 3 (top_statement_list)
 
 
-State 82
+state 82
 
    17 top_statement: constant_declaration . ';'
    24 constant_declaration: constant_declaration . ',' T_STRING '=' static_scalar
@@ -3702,70 +3702,70 @@
     ';'  shift, and go to state 216
 
 
-State 83
+state 83
 
     7 top_statement: statement .
 
     $default  reduce using rule 7 (top_statement)
 
 
-State 84
+state 84
 
    33 statement: unticked_statement .
 
     $default  reduce using rule 33 (statement)
 
 
-State 85
+state 85
 
     8 top_statement: function_declaration_statement .
 
     $default  reduce using rule 8 (top_statement)
 
 
-State 86
+state 86
 
     9 top_statement: class_declaration_statement .
 
     $default  reduce using rule 9 (top_statement)
 
 
-State 87
+state 87
 
    94 function_declaration_statement: unticked_function_declaration_statement .
 
     $default  reduce using rule 94 (function_declaration_statement)
 
 
-State 88
+state 88
 
    95 class_declaration_statement: unticked_class_declaration_statement .
 
     $default  reduce using rule 95 (class_declaration_statement)
 
 
-State 89
+state 89
 
   101 unticked_class_declaration_statement: class_entry_type . T_STRING extends_from $@30 implements_list '{' class_statement_list '}'
 
     T_STRING  shift, and go to state 217
 
 
-State 90
+state 90
 
   103 unticked_class_declaration_statement: interface_entry . T_STRING $@31 interface_extends_list '{' class_statement_list '}'
 
     T_STRING  shift, and go to state 218
 
 
-State 91
+state 91
 
   380 expr: expr_without_variable .
 
     $default  reduce using rule 380 (expr)
 
 
-State 92
+state 92
 
    99 unticked_function_declaration_statement: function . is_reference T_STRING $@29 '(' parameter_list ')' '{' inner_statement_list '}'
   294 expr_without_variable: function . is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
@@ -3777,14 +3777,14 @@
     is_reference  go to state 220
 
 
-State 93
+state 93
 
   401 base_variable_with_function_calls: function_call .
 
     $default  reduce using rule 401 (base_variable_with_function_calls)
 
 
-State 94
+state 94
 
   309 function_call: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@54 function_call_parameter_list ')'
   311              | class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@55 function_call_parameter_list ')'
@@ -3794,21 +3794,21 @@
     T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 221
 
 
-State 95
+state 95
 
   368 scalar: common_scalar .
 
     $default  reduce using rule 368 (scalar)
 
 
-State 96
+state 96
 
   289 expr_without_variable: scalar .
 
     $default  reduce using rule 289 (expr_without_variable)
 
 
-State 97
+state 97
 
    65 unticked_statement: expr . ';'
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -3868,14 +3868,14 @@
     ';'                    shift, and go to state 248
 
 
-State 98
+state 98
 
   379 expr: r_variable .
 
     $default  reduce using rule 379 (expr)
 
 
-State 99
+state 99
 
   235 expr_without_variable: rw_variable . T_INC
   237                      | rw_variable . T_DEC
@@ -3884,7 +3884,7 @@
     T_INC  shift, and go to state 250
 
 
-State 100
+state 100
 
   217 expr_without_variable: variable . '=' expr
   218                      | variable . '=' '&' variable
@@ -3921,21 +3921,21 @@
     $default  reduce using rule 381 (r_variable)
 
 
-State 101
+state 101
 
   317 function_call: variable_without_objects . '(' $@58 function_call_parameter_list ')'
 
     '('  shift, and go to state 263
 
 
-State 102
+state 102
 
   404 base_variable: static_member .
 
     $default  reduce using rule 404 (base_variable)
 
 
-State 103
+state 103
 
   313 function_call: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@56 function_call_parameter_list ')'
   315              | variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@57 function_call_parameter_list ')'
@@ -3945,7 +3945,7 @@
     T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 264
 
 
-State 104
+state 104
 
   386 variable: base_variable_with_function_calls . T_OBJECT_OPERATOR $@61 object_property $@62 method_or_not variable_properties
   387         | base_variable_with_function_calls .
@@ -3955,14 +3955,14 @@
     $default  reduce using rule 387 (variable)
 
 
-State 105
+state 105
 
   400 base_variable_with_function_calls: base_variable .
 
     $default  reduce using rule 400 (base_variable_with_function_calls)
 
 
-State 106
+state 106
 
   395 variable_without_objects: reference_variable .
   399 variable_class_name: reference_variable .
@@ -3978,14 +3978,14 @@
     $default                reduce using rule 402 (base_variable)
 
 
-State 107
+state 107
 
   407 reference_variable: compound_variable .
 
     $default  reduce using rule 407 (reference_variable)
 
 
-State 108
+state 108
 
   396 variable_without_objects: simple_indirect_reference . reference_variable
   403 base_variable: simple_indirect_reference . reference_variable
@@ -3998,35 +3998,35 @@
     compound_variable   go to state 107
 
 
-State 109
+state 109
 
   278 expr_without_variable: internal_functions_in_yacc .
 
     $default  reduce using rule 278 (expr_without_variable)
 
 
-State 110
+state 110
 
   364 scalar: class_constant .
 
     $default  reduce using rule 364 (scalar)
 
 
-State 111
+state 111
 
     5 namespace_name: T_STRING .
 
     $default  reduce using rule 5 (namespace_name)
 
 
-State 112
+state 112
 
   318 class_name: T_STATIC .
 
     $default  reduce using rule 318 (class_name)
 
 
-State 113
+state 113
 
   305 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' $@52 function_call_parameter_list ')'
   320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
@@ -4035,7 +4035,7 @@
     T_NS_SEPARATOR  shift, and go to state 201
 
 
-State 114
+state 114
 
   294 expr_without_variable: function . is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
@@ -4046,7 +4046,7 @@
     is_reference  go to state 270
 
 
-State 115
+state 115
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4107,7 +4107,7 @@
     $default  reduce using rule 458 (internal_functions_in_yacc)
 
 
-State 116
+state 116
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4168,7 +4168,7 @@
     $default  reduce using rule 457 (internal_functions_in_yacc)
 
 
-State 117
+state 117
 
   456 internal_functions_in_yacc: T_EVAL '(' . expr ')'
 
@@ -4245,7 +4245,7 @@
     class_constant                     go to state 110
 
 
-State 118
+state 118
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4306,7 +4306,7 @@
     $default  reduce using rule 455 (internal_functions_in_yacc)
 
 
-State 119
+state 119
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4367,7 +4367,7 @@
     $default  reduce using rule 454 (internal_functions_in_yacc)
 
 
-State 120
+state 120
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4425,7 +4425,7 @@
     $default  reduce using rule 292 (expr_without_variable)
 
 
-State 121
+state 121
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4459,7 +4459,7 @@
     $default  reduce using rule 259 (expr_without_variable)
 
 
-State 122
+state 122
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4493,7 +4493,7 @@
     $default  reduce using rule 260 (expr_without_variable)
 
 
-State 123
+state 123
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4529,7 +4529,7 @@
     $default  reduce using rule 261 (expr_without_variable)
 
 
-State 124
+state 124
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4563,7 +4563,7 @@
     $default  reduce using rule 262 (expr_without_variable)
 
 
-State 125
+state 125
 
   288 expr_without_variable: '@' $@49 . expr
 
@@ -4640,7 +4640,7 @@
     class_constant                     go to state 110
 
 
-State 126
+state 126
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4674,7 +4674,7 @@
     $default  reduce using rule 285 (expr_without_variable)
 
 
-State 127
+state 127
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4708,7 +4708,7 @@
     $default  reduce using rule 284 (expr_without_variable)
 
 
-State 128
+state 128
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4742,7 +4742,7 @@
     $default  reduce using rule 283 (expr_without_variable)
 
 
-State 129
+state 129
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4776,7 +4776,7 @@
     $default  reduce using rule 282 (expr_without_variable)
 
 
-State 130
+state 130
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4810,7 +4810,7 @@
     $default  reduce using rule 281 (expr_without_variable)
 
 
-State 131
+state 131
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4844,7 +4844,7 @@
     $default  reduce using rule 280 (expr_without_variable)
 
 
-State 132
+state 132
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -4878,7 +4878,7 @@
     $default  reduce using rule 279 (expr_without_variable)
 
 
-State 133
+state 133
 
   305 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' $@52 function_call_parameter_list ')'
   320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
@@ -4886,7 +4886,7 @@
     T_NS_SEPARATOR  shift, and go to state 273
 
 
-State 134
+state 134
 
   307 function_call: T_NS_SEPARATOR . namespace_name '(' $@53 function_call_parameter_list ')'
   321 class_name: T_NS_SEPARATOR . namespace_name
@@ -4896,7 +4896,7 @@
     namespace_name  go to state 274
 
 
-State 135
+state 135
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   303 function_call: namespace_name . '(' $@51 function_call_parameter_list ')'
@@ -4908,7 +4908,7 @@
     $default  reduce using rule 319 (class_name)
 
 
-State 136
+state 136
 
   309 function_call: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@54 function_call_parameter_list ')'
   311              | class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@55 function_call_parameter_list ')'
@@ -4917,21 +4917,21 @@
     T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 275
 
 
-State 137
+state 137
 
   238 expr_without_variable: T_DEC rw_variable .
 
     $default  reduce using rule 238 (expr_without_variable)
 
 
-State 138
+state 138
 
   383 rw_variable: variable .
 
     $default  reduce using rule 383 (rw_variable)
 
 
-State 139
+state 139
 
   313 function_call: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@56 function_call_parameter_list ')'
   315              | variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@57 function_call_parameter_list ')'
@@ -4940,14 +4940,14 @@
     T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 276
 
 
-State 140
+state 140
 
   236 expr_without_variable: T_INC rw_variable .
 
     $default  reduce using rule 236 (expr_without_variable)
 
 
-State 141
+state 141
 
   223 expr_without_variable: T_CLONE expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -4981,14 +4981,14 @@
     $default  reduce using rule 223 (expr_without_variable)
 
 
-State 142
+state 142
 
   320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
     T_NS_SEPARATOR  shift, and go to state 277
 
 
-State 143
+state 143
 
   321 class_name: T_NS_SEPARATOR . namespace_name
 
@@ -4997,7 +4997,7 @@
     namespace_name  go to state 278
 
 
-State 144
+state 144
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   319 class_name: namespace_name .
@@ -5007,7 +5007,7 @@
     $default  reduce using rule 319 (class_name)
 
 
-State 145
+state 145
 
   325 class_name_reference: class_name .
   397 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
@@ -5017,7 +5017,7 @@
     $default  reduce using rule 325 (class_name_reference)
 
 
-State 146
+state 146
 
   222 expr_without_variable: T_NEW class_name_reference . $@41 ctor_arguments
 
@@ -5026,21 +5026,21 @@
     $@41  go to state 280
 
 
-State 147
+state 147
 
   326 class_name_reference: dynamic_class_name_reference .
 
     $default  reduce using rule 326 (class_name_reference)
 
 
-State 148
+state 148
 
   398 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
 
     T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 281
 
 
-State 149
+state 149
 
   329 dynamic_class_name_reference: base_variable . T_OBJECT_OPERATOR $@59 object_property $@60 dynamic_class_name_variable_properties
   330                             | base_variable .
@@ -5050,7 +5050,7 @@
     $default  reduce using rule 330 (dynamic_class_name_reference)
 
 
-State 150
+state 150
 
   399 variable_class_name: reference_variable .
   402 base_variable: reference_variable .
@@ -5064,7 +5064,7 @@
     $default                reduce using rule 402 (base_variable)
 
 
-State 151
+state 151
 
   403 base_variable: simple_indirect_reference . reference_variable
   421 simple_indirect_reference: simple_indirect_reference . '$'
@@ -5076,7 +5076,7 @@
     compound_variable   go to state 107
 
 
-State 152
+state 152
 
   335 exit_expr: '(' . ')'
   336          | '(' . expr ')'
@@ -5155,14 +5155,14 @@
     class_constant                     go to state 110
 
 
-State 153
+state 153
 
   286 expr_without_variable: T_EXIT exit_expr .
 
     $default  reduce using rule 286 (expr_without_variable)
 
 
-State 154
+state 154
 
    38 unticked_statement: T_IF '(' . expr ')' $@5 statement $@6 elseif_list else_single
    41                   | T_IF '(' . expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';'
@@ -5240,14 +5240,14 @@
     class_constant                     go to state 110
 
 
-State 155
+state 155
 
    34 statement: T_STRING ':' .
 
     $default  reduce using rule 34 (statement)
 
 
-State 156
+state 156
 
    63 unticked_statement: T_ECHO echo_expr_list . ';'
   208 echo_expr_list: echo_expr_list . ',' expr
@@ -5256,7 +5256,7 @@
     ';'  shift, and go to state 288
 
 
-State 157
+state 157
 
   209 echo_expr_list: expr .
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -5317,7 +5317,7 @@
     $default  reduce using rule 209 (echo_expr_list)
 
 
-State 158
+state 158
 
    47 unticked_statement: T_DO $@11 . statement T_WHILE '(' $@12 expr ')' ';'
 
@@ -5415,7 +5415,7 @@
     class_constant                     go to state 110
 
 
-State 159
+state 159
 
    44 unticked_statement: T_WHILE '(' . $@9 expr ')' $@10 while_statement
 
@@ -5424,7 +5424,7 @@
     $@9  go to state 290
 
 
-State 160
+state 160
 
    51 unticked_statement: T_FOR '(' . for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement
 
@@ -5505,7 +5505,7 @@
     class_constant                     go to state 110
 
 
-State 161
+state 161
 
    69 unticked_statement: T_FOREACH '(' . variable T_AS $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
    72                   | T_FOREACH '(' . expr_without_variable T_AS $@19 variable foreach_optional_arg ')' $@20 foreach_statement
@@ -5583,14 +5583,14 @@
     class_constant                     go to state 110
 
 
-State 162
+state 162
 
    74 unticked_statement: T_DECLARE $@21 . '(' declare_list ')' declare_statement
 
     '('  shift, and go to state 296
 
 
-State 163
+state 163
 
    53 unticked_statement: T_SWITCH '(' . expr ')' $@16 switch_case_list
 
@@ -5667,14 +5667,14 @@
     class_constant                     go to state 110
 
 
-State 164
+state 164
 
    54 unticked_statement: T_BREAK ';' .
 
     $default  reduce using rule 54 (unticked_statement)
 
 
-State 165
+state 165
 
    55 unticked_statement: T_BREAK expr . ';'
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -5734,14 +5734,14 @@
     ';'                    shift, and go to state 298
 
 
-State 166
+state 166
 
    56 unticked_statement: T_CONTINUE ';' .
 
     $default  reduce using rule 56 (unticked_statement)
 
 
-State 167
+state 167
 
    57 unticked_statement: T_CONTINUE expr . ';'
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -5801,28 +5801,28 @@
     ';'                    shift, and go to state 299
 
 
-State 168
+state 168
 
    83 unticked_statement: T_GOTO T_STRING . ';'
 
     ';'  shift, and go to state 300
 
 
-State 169
+state 169
 
    25 constant_declaration: T_CONST T_STRING . '=' static_scalar
 
     '='  shift, and go to state 301
 
 
-State 170
+state 170
 
    58 unticked_statement: T_RETURN ';' .
 
     $default  reduce using rule 58 (unticked_statement)
 
 
-State 171
+state 171
 
    59 unticked_statement: T_RETURN expr_without_variable . ';'
   380 expr: expr_without_variable .
@@ -5832,7 +5832,7 @@
     $default  reduce using rule 380 (expr)
 
 
-State 172
+state 172
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -5890,7 +5890,7 @@
     T_INSTANCEOF           shift, and go to state 247
 
 
-State 173
+state 173
 
    60 unticked_statement: T_RETURN variable . ';'
   217 expr_without_variable: variable . '=' expr
@@ -5929,14 +5929,14 @@
     $default  reduce using rule 381 (r_variable)
 
 
-State 174
+state 174
 
    81 unticked_statement: T_TRY $@22 . '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
     '{'  shift, and go to state 304
 
 
-State 175
+state 175
 
    82 unticked_statement: T_THROW expr . ';'
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -5996,7 +5996,7 @@
     ';'                    shift, and go to state 305
 
 
-State 176
+state 176
 
    22 use_declaration: T_NS_SEPARATOR . namespace_name
    23                | T_NS_SEPARATOR . namespace_name T_AS T_STRING
@@ -6006,7 +6006,7 @@
     namespace_name  go to state 306
 
 
-State 177
+state 177
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
    20 use_declaration: namespace_name .
@@ -6018,7 +6018,7 @@
     $default  reduce using rule 20 (use_declaration)
 
 
-State 178
+state 178
 
    16 top_statement: T_USE use_declarations . ';'
    18 use_declarations: use_declarations . ',' use_declaration
@@ -6027,21 +6027,21 @@
     ';'  shift, and go to state 309
 
 
-State 179
+state 179
 
    19 use_declarations: use_declaration .
 
     $default  reduce using rule 19 (use_declarations)
 
 
-State 180
+state 180
 
   174 global_var: T_VARIABLE .
 
     $default  reduce using rule 174 (global_var)
 
 
-State 181
+state 181
 
   175 global_var: '$' . r_variable
   176           | '$' . '{' expr '}'
@@ -6069,7 +6069,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 182
+state 182
 
    61 unticked_statement: T_GLOBAL global_var_list . ';'
   172 global_var_list: global_var_list . ',' global_var
@@ -6078,28 +6078,28 @@
     ';'  shift, and go to state 314
 
 
-State 183
+state 183
 
   173 global_var_list: global_var .
 
     $default  reduce using rule 173 (global_var_list)
 
 
-State 184
+state 184
 
   106 class_entry_type: T_FINAL T_CLASS .
 
     $default  reduce using rule 106 (class_entry_type)
 
 
-State 185
+state 185
 
   105 class_entry_type: T_ABSTRACT T_CLASS .
 
     $default  reduce using rule 105 (class_entry_type)
 
 
-State 186
+state 186
 
   179 static_var_list: T_VARIABLE .
   180                | T_VARIABLE . '=' static_scalar
@@ -6109,7 +6109,7 @@
     $default  reduce using rule 179 (static_var_list)
 
 
-State 187
+state 187
 
    62 unticked_statement: T_STATIC static_var_list . ';'
   177 static_var_list: static_var_list . ',' T_VARIABLE
@@ -6119,7 +6119,7 @@
     ';'  shift, and go to state 317
 
 
-State 188
+state 188
 
    66 unticked_statement: T_UNSET '(' . unset_variables ')' ';'
 
@@ -6146,7 +6146,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 189
+state 189
 
   452 internal_functions_in_yacc: T_ISSET '(' . isset_variables ')'
 
@@ -6172,7 +6172,7 @@
     isset_variables                    go to state 322
 
 
-State 190
+state 190
 
   453 internal_functions_in_yacc: T_EMPTY '(' . variable ')'
 
@@ -6197,14 +6197,14 @@
     simple_indirect_reference          go to state 108
 
 
-State 191
+state 191
 
    10 top_statement: T_HALT_COMPILER '(' . ')' ';'
 
     ')'  shift, and go to state 324
 
 
-State 192
+state 192
 
   216 expr_without_variable: T_LIST '(' . $@39 assignment_list ')' '=' expr
 
@@ -6213,7 +6213,7 @@
     $@39  go to state 325
 
 
-State 193
+state 193
 
   290 expr_without_variable: T_ARRAY '(' . array_pair_list ')'
 
@@ -6295,7 +6295,7 @@
     class_constant                     go to state 110
 
 
-State 194
+state 194
 
   442 encaps_var: T_VARIABLE .
   444           | T_VARIABLE . '[' $@67 encaps_var_offset ']'
@@ -6307,7 +6307,7 @@
     $default  reduce using rule 442 (encaps_var)
 
 
-State 195
+state 195
 
   352 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC
   441 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
@@ -6320,14 +6320,14 @@
     encaps_var  go to state 333
 
 
-State 196
+state 196
 
   353 common_scalar: T_START_HEREDOC T_END_HEREDOC .
 
     $default  reduce using rule 353 (common_scalar)
 
 
-State 197
+state 197
 
   446 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES . expr '}'
   447           | T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'
@@ -6405,7 +6405,7 @@
     class_constant                     go to state 110
 
 
-State 198
+state 198
 
   448 encaps_var: T_CURLY_OPEN . variable '}'
 
@@ -6430,7 +6430,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 199
+state 199
 
   370 scalar: T_START_HEREDOC encaps_list . T_END_HEREDOC
   438 encaps_list: encaps_list . encaps_var
@@ -6445,14 +6445,14 @@
     encaps_var  go to state 339
 
 
-State 200
+state 200
 
   440 encaps_list: encaps_var .
 
     $default  reduce using rule 440 (encaps_list)
 
 
-State 201
+state 201
 
   305 function_call: T_NAMESPACE T_NS_SEPARATOR . namespace_name '(' $@52 function_call_parameter_list ')'
   320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
@@ -6463,7 +6463,7 @@
     namespace_name  go to state 340
 
 
-State 202
+state 202
 
    15 top_statement: T_NAMESPACE '{' . $@3 top_statement_list '}'
 
@@ -6472,7 +6472,7 @@
     $@3  go to state 341
 
 
-State 203
+state 203
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
    11 top_statement: T_NAMESPACE namespace_name . ';'
@@ -6483,7 +6483,7 @@
     '{'             shift, and go to state 343
 
 
-State 204
+state 204
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   307 function_call: T_NS_SEPARATOR namespace_name . '(' $@53 function_call_parameter_list ')'
@@ -6497,7 +6497,7 @@
     $default                reduce using rule 367 (scalar)
 
 
-State 205
+state 205
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -6557,7 +6557,7 @@
     ')'                    shift, and go to state 345
 
 
-State 206
+state 206
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
    35 unticked_statement: '{' inner_statement_list . '}'
@@ -6569,7 +6569,7 @@
     $@4  go to state 347
 
 
-State 207
+state 207
 
   409 compound_variable: '$' '{' . expr '}'
 
@@ -6646,7 +6646,7 @@
     class_constant                     go to state 110
 
 
-State 208
+state 208
 
   338 backticks_expr: T_ENCAPSED_AND_WHITESPACE .
   441 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
@@ -6660,14 +6660,14 @@
     encaps_var  go to state 333
 
 
-State 209
+state 209
 
   291 expr_without_variable: '`' backticks_expr . '`'
 
     '`'  shift, and go to state 349
 
 
-State 210
+state 210
 
   339 backticks_expr: encaps_list .
   438 encaps_list: encaps_list . encaps_var
@@ -6683,7 +6683,7 @@
     encaps_var  go to state 339
 
 
-State 211
+state 211
 
   441 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
 
@@ -6694,7 +6694,7 @@
     encaps_var  go to state 333
 
 
-State 212
+state 212
 
   369 scalar: '"' encaps_list . '"'
   438 encaps_list: encaps_list . encaps_var
@@ -6709,14 +6709,14 @@
     encaps_var  go to state 339
 
 
-State 213
+state 213
 
     6 namespace_name: namespace_name T_NS_SEPARATOR . T_STRING
 
     T_STRING  shift, and go to state 351
 
 
-State 214
+state 214
 
   303 function_call: namespace_name '(' . $@51 function_call_parameter_list ')'
 
@@ -6725,21 +6725,21 @@
     $@51  go to state 352
 
 
-State 215
+state 215
 
    24 constant_declaration: constant_declaration ',' . T_STRING '=' static_scalar
 
     T_STRING  shift, and go to state 353
 
 
-State 216
+state 216
 
    17 top_statement: constant_declaration ';' .
 
     $default  reduce using rule 17 (top_statement)
 
 
-State 217
+state 217
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING . extends_from $@30 implements_list '{' class_statement_list '}'
 
@@ -6750,7 +6750,7 @@
     extends_from  go to state 355
 
 
-State 218
+state 218
 
   103 unticked_class_declaration_statement: interface_entry T_STRING . $@31 interface_extends_list '{' class_statement_list '}'
 
@@ -6759,14 +6759,14 @@
     $@31  go to state 356
 
 
-State 219
+state 219
 
    97 is_reference: '&' .
 
     $default  reduce using rule 97 (is_reference)
 
 
-State 220
+state 220
 
    99 unticked_function_declaration_statement: function is_reference . T_STRING $@29 '(' parameter_list ')' '{' inner_statement_list '}'
   294 expr_without_variable: function is_reference . '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
@@ -6775,7 +6775,7 @@
     '('       shift, and go to state 358
 
 
-State 221
+state 221
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' $@54 function_call_parameter_list ')'
   311              | class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' $@55 function_call_parameter_list ')'
@@ -6792,7 +6792,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 222
+state 222
 
   244 expr_without_variable: expr T_LOGICAL_OR . $@44 expr
 
@@ -6801,7 +6801,7 @@
     $@44  go to state 363
 
 
-State 223
+state 223
 
   247 expr_without_variable: expr T_LOGICAL_XOR . expr
 
@@ -6878,7 +6878,7 @@
     class_constant                     go to state 110
 
 
-State 224
+state 224
 
   246 expr_without_variable: expr T_LOGICAL_AND . $@45 expr
 
@@ -6887,7 +6887,7 @@
     $@45  go to state 365
 
 
-State 225
+state 225
 
   275 expr_without_variable: expr '?' . $@46 expr ':' $@47 expr
   277                      | expr '?' . ':' $@48 expr
@@ -6899,7 +6899,7 @@
     $@46  go to state 367
 
 
-State 226
+state 226
 
   240 expr_without_variable: expr T_BOOLEAN_OR . $@42 expr
 
@@ -6908,7 +6908,7 @@
     $@42  go to state 368
 
 
-State 227
+state 227
 
   242 expr_without_variable: expr T_BOOLEAN_AND . $@43 expr
 
@@ -6917,7 +6917,7 @@
     $@43  go to state 369
 
 
-State 228
+state 228
 
   248 expr_without_variable: expr '|' . expr
 
@@ -6994,7 +6994,7 @@
     class_constant                     go to state 110
 
 
-State 229
+state 229
 
   250 expr_without_variable: expr '^' . expr
 
@@ -7071,7 +7071,7 @@
     class_constant                     go to state 110
 
 
-State 230
+state 230
 
   249 expr_without_variable: expr '&' . expr
 
@@ -7148,7 +7148,7 @@
     class_constant                     go to state 110
 
 
-State 231
+state 231
 
   264 expr_without_variable: expr T_IS_NOT_IDENTICAL . expr
 
@@ -7225,7 +7225,7 @@
     class_constant                     go to state 110
 
 
-State 232
+state 232
 
   263 expr_without_variable: expr T_IS_IDENTICAL . expr
 
@@ -7302,7 +7302,7 @@
     class_constant                     go to state 110
 
 
-State 233
+state 233
 
   266 expr_without_variable: expr T_IS_NOT_EQUAL . expr
 
@@ -7379,7 +7379,7 @@
     class_constant                     go to state 110
 
 
-State 234
+state 234
 
   265 expr_without_variable: expr T_IS_EQUAL . expr
 
@@ -7456,7 +7456,7 @@
     class_constant                     go to state 110
 
 
-State 235
+state 235
 
   267 expr_without_variable: expr '<' . expr
 
@@ -7533,7 +7533,7 @@
     class_constant                     go to state 110
 
 
-State 236
+state 236
 
   269 expr_without_variable: expr '>' . expr
 
@@ -7610,7 +7610,7 @@
     class_constant                     go to state 110
 
 
-State 237
+state 237
 
   270 expr_without_variable: expr T_IS_GREATER_OR_EQUAL . expr
 
@@ -7687,7 +7687,7 @@
     class_constant                     go to state 110
 
 
-State 238
+state 238
 
   268 expr_without_variable: expr T_IS_SMALLER_OR_EQUAL . expr
 
@@ -7764,7 +7764,7 @@
     class_constant                     go to state 110
 
 
-State 239
+state 239
 
   258 expr_without_variable: expr T_SR . expr
 
@@ -7841,7 +7841,7 @@
     class_constant                     go to state 110
 
 
-State 240
+state 240
 
   257 expr_without_variable: expr T_SL . expr
 
@@ -7918,7 +7918,7 @@
     class_constant                     go to state 110
 
 
-State 241
+state 241
 
   252 expr_without_variable: expr '+' . expr
 
@@ -7995,7 +7995,7 @@
     class_constant                     go to state 110
 
 
-State 242
+state 242
 
   253 expr_without_variable: expr '-' . expr
 
@@ -8072,7 +8072,7 @@
     class_constant                     go to state 110
 
 
-State 243
+state 243
 
   251 expr_without_variable: expr '.' . expr
 
@@ -8149,7 +8149,7 @@
     class_constant                     go to state 110
 
 
-State 244
+state 244
 
   254 expr_without_variable: expr '*' . expr
 
@@ -8226,7 +8226,7 @@
     class_constant                     go to state 110
 
 
-State 245
+state 245
 
   255 expr_without_variable: expr '/' . expr
 
@@ -8303,7 +8303,7 @@
     class_constant                     go to state 110
 
 
-State 246
+state 246
 
   256 expr_without_variable: expr '%' . expr
 
@@ -8380,7 +8380,7 @@
     class_constant                     go to state 110
 
 
-State 247
+state 247
 
   271 expr_without_variable: expr T_INSTANCEOF . class_name_reference
 
@@ -8403,28 +8403,28 @@
     simple_indirect_reference     go to state 151
 
 
-State 248
+state 248
 
    65 unticked_statement: expr ';' .
 
     $default  reduce using rule 65 (unticked_statement)
 
 
-State 249
+state 249
 
   237 expr_without_variable: rw_variable T_DEC .
 
     $default  reduce using rule 237 (expr_without_variable)
 
 
-State 250
+state 250
 
   235 expr_without_variable: rw_variable T_INC .
 
     $default  reduce using rule 235 (expr_without_variable)
 
 
-State 251
+state 251
 
   217 expr_without_variable: variable '=' . expr
   218                      | variable '=' . '&' variable
@@ -8504,7 +8504,7 @@
     class_constant                     go to state 110
 
 
-State 252
+state 252
 
   234 expr_without_variable: variable T_SR_EQUAL . expr
 
@@ -8581,7 +8581,7 @@
     class_constant                     go to state 110
 
 
-State 253
+state 253
 
   233 expr_without_variable: variable T_SL_EQUAL . expr
 
@@ -8658,7 +8658,7 @@
     class_constant                     go to state 110
 
 
-State 254
+state 254
 
   232 expr_without_variable: variable T_XOR_EQUAL . expr
 
@@ -8735,7 +8735,7 @@
     class_constant                     go to state 110
 
 
-State 255
+state 255
 
   231 expr_without_variable: variable T_OR_EQUAL . expr
 
@@ -8812,7 +8812,7 @@
     class_constant                     go to state 110
 
 
-State 256
+state 256
 
   230 expr_without_variable: variable T_AND_EQUAL . expr
 
@@ -8889,7 +8889,7 @@
     class_constant                     go to state 110
 
 
-State 257
+state 257
 
   229 expr_without_variable: variable T_MOD_EQUAL . expr
 
@@ -8966,7 +8966,7 @@
     class_constant                     go to state 110
 
 
-State 258
+state 258
 
   228 expr_without_variable: variable T_CONCAT_EQUAL . expr
 
@@ -9043,7 +9043,7 @@
     class_constant                     go to state 110
 
 
-State 259
+state 259
 
   227 expr_without_variable: variable T_DIV_EQUAL . expr
 
@@ -9120,7 +9120,7 @@
     class_constant                     go to state 110
 
 
-State 260
+state 260
 
   226 expr_without_variable: variable T_MUL_EQUAL . expr
 
@@ -9197,7 +9197,7 @@
     class_constant                     go to state 110
 
 
-State 261
+state 261
 
   225 expr_without_variable: variable T_MINUS_EQUAL . expr
 
@@ -9274,7 +9274,7 @@
     class_constant                     go to state 110
 
 
-State 262
+state 262
 
   224 expr_without_variable: variable T_PLUS_EQUAL . expr
 
@@ -9351,7 +9351,7 @@
     class_constant                     go to state 110
 
 
-State 263
+state 263
 
   317 function_call: variable_without_objects '(' . $@58 function_call_parameter_list ')'
 
@@ -9360,7 +9360,7 @@
     $@58  go to state 403
 
 
-State 264
+state 264
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' $@56 function_call_parameter_list ')'
   315              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' $@57 function_call_parameter_list ')'
@@ -9377,7 +9377,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 265
+state 265
 
   386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR . $@61 object_property $@62 method_or_not variable_properties
 
@@ -9386,7 +9386,7 @@
     $@61  go to state 406
 
 
-State 266
+state 266
 
   405 reference_variable: reference_variable '[' . dim_offset ']'
 
@@ -9466,7 +9466,7 @@
     class_constant                     go to state 110
 
 
-State 267
+state 267
 
   406 reference_variable: reference_variable '{' . expr '}'
 
@@ -9543,7 +9543,7 @@
     class_constant                     go to state 110
 
 
-State 268
+state 268
 
   409 compound_variable: '$' . '{' expr '}'
   421 simple_indirect_reference: simple_indirect_reference '$' .
@@ -9553,7 +9553,7 @@
     $default  reduce using rule 421 (simple_indirect_reference)
 
 
-State 269
+state 269
 
   396 variable_without_objects: simple_indirect_reference reference_variable .
   403 base_variable: simple_indirect_reference reference_variable .
@@ -9567,14 +9567,14 @@
     $default  reduce using rule 403 (base_variable)
 
 
-State 270
+state 270
 
   294 expr_without_variable: function is_reference . '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
     '('  shift, and go to state 358
 
 
-State 271
+state 271
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -9634,7 +9634,7 @@
     ')'                    shift, and go to state 410
 
 
-State 272
+state 272
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -9668,7 +9668,7 @@
     $default  reduce using rule 288 (expr_without_variable)
 
 
-State 273
+state 273
 
   305 function_call: T_NAMESPACE T_NS_SEPARATOR . namespace_name '(' $@52 function_call_parameter_list ')'
   320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
@@ -9678,7 +9678,7 @@
     namespace_name  go to state 411
 
 
-State 274
+state 274
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   307 function_call: T_NS_SEPARATOR namespace_name . '(' $@53 function_call_parameter_list ')'
@@ -9690,7 +9690,7 @@
     $default  reduce using rule 321 (class_name)
 
 
-State 275
+state 275
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' $@54 function_call_parameter_list ')'
   311              | class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' $@55 function_call_parameter_list ')'
@@ -9706,7 +9706,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 276
+state 276
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' $@56 function_call_parameter_list ')'
   315              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' $@57 function_call_parameter_list ')'
@@ -9722,7 +9722,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 277
+state 277
 
   320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
@@ -9731,7 +9731,7 @@
     namespace_name  go to state 414
 
 
-State 278
+state 278
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   321 class_name: T_NS_SEPARATOR namespace_name .
@@ -9741,7 +9741,7 @@
     $default  reduce using rule 321 (class_name)
 
 
-State 279
+state 279
 
   397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
 
@@ -9754,7 +9754,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 280
+state 280
 
   222 expr_without_variable: T_NEW class_name_reference $@41 . ctor_arguments
 
@@ -9765,7 +9765,7 @@
     ctor_arguments  go to state 417
 
 
-State 281
+state 281
 
   398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
 
@@ -9778,7 +9778,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 282
+state 282
 
   329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR . $@59 object_property $@60 dynamic_class_name_variable_properties
 
@@ -9787,7 +9787,7 @@
     $@59  go to state 419
 
 
-State 283
+state 283
 
   403 base_variable: simple_indirect_reference reference_variable .
   405 reference_variable: reference_variable . '[' dim_offset ']'
@@ -9799,14 +9799,14 @@
     $default  reduce using rule 403 (base_variable)
 
 
-State 284
+state 284
 
   335 exit_expr: '(' ')' .
 
     $default  reduce using rule 335 (exit_expr)
 
 
-State 285
+state 285
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -9866,7 +9866,7 @@
     ')'                    shift, and go to state 420
 
 
-State 286
+state 286
 
    38 unticked_statement: T_IF '(' expr . ')' $@5 statement $@6 elseif_list else_single
    41                   | T_IF '(' expr . ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';'
@@ -9927,7 +9927,7 @@
     ')'                    shift, and go to state 421
 
 
-State 287
+state 287
 
   208 echo_expr_list: echo_expr_list ',' . expr
 
@@ -10004,21 +10004,21 @@
     class_constant                     go to state 110
 
 
-State 288
+state 288
 
    63 unticked_statement: T_ECHO echo_expr_list ';' .
 
     $default  reduce using rule 63 (unticked_statement)
 
 
-State 289
+state 289
 
    47 unticked_statement: T_DO $@11 statement . T_WHILE '(' $@12 expr ')' ';'
 
     T_WHILE  shift, and go to state 423
 
 
-State 290
+state 290
 
    44 unticked_statement: T_WHILE '(' $@9 . expr ')' $@10 while_statement
 
@@ -10095,14 +10095,14 @@
     class_constant                     go to state 110
 
 
-State 291
+state 291
 
    51 unticked_statement: T_FOR '(' for_expr . ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement
 
     ';'  shift, and go to state 425
 
 
-State 292
+state 292
 
   211 for_expr: non_empty_for_expr .
   213 non_empty_for_expr: non_empty_for_expr . ',' $@38 expr
@@ -10112,7 +10112,7 @@
     $default  reduce using rule 211 (for_expr)
 
 
-State 293
+state 293
 
   214 non_empty_for_expr: expr .
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -10173,7 +10173,7 @@
     $default  reduce using rule 214 (non_empty_for_expr)
 
 
-State 294
+state 294
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable . T_AS $@19 variable foreach_optional_arg ')' $@20 foreach_statement
   380 expr: expr_without_variable .
@@ -10183,7 +10183,7 @@
     $default  reduce using rule 380 (expr)
 
 
-State 295
+state 295
 
    69 unticked_statement: T_FOREACH '(' variable . T_AS $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   217 expr_without_variable: variable . '=' expr
@@ -10222,7 +10222,7 @@
     $default  reduce using rule 381 (r_variable)
 
 
-State 296
+state 296
 
    74 unticked_statement: T_DECLARE $@21 '(' . declare_list ')' declare_statement
 
@@ -10231,7 +10231,7 @@
     declare_list  go to state 430
 
 
-State 297
+state 297
 
    53 unticked_statement: T_SWITCH '(' expr . ')' $@16 switch_case_list
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -10291,28 +10291,28 @@
     ')'                    shift, and go to state 431
 
 
-State 298
+state 298
 
    55 unticked_statement: T_BREAK expr ';' .
 
     $default  reduce using rule 55 (unticked_statement)
 
 
-State 299
+state 299
 
    57 unticked_statement: T_CONTINUE expr ';' .
 
     $default  reduce using rule 57 (unticked_statement)
 
 
-State 300
+state 300
 
    83 unticked_statement: T_GOTO T_STRING ';' .
 
     $default  reduce using rule 83 (unticked_statement)
 
 
-State 301
+state 301
 
    25 constant_declaration: T_CONST T_STRING '=' . static_scalar
 
@@ -10342,21 +10342,21 @@
     static_class_constant  go to state 442
 
 
-State 302
+state 302
 
    59 unticked_statement: T_RETURN expr_without_variable ';' .
 
     $default  reduce using rule 59 (unticked_statement)
 
 
-State 303
+state 303
 
    60 unticked_statement: T_RETURN variable ';' .
 
     $default  reduce using rule 60 (unticked_statement)
 
 
-State 304
+state 304
 
    81 unticked_statement: T_TRY $@22 '{' . inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
@@ -10365,14 +10365,14 @@
     inner_statement_list  go to state 443
 
 
-State 305
+state 305
 
    82 unticked_statement: T_THROW expr ';' .
 
     $default  reduce using rule 82 (unticked_statement)
 
 
-State 306
+state 306
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
    22 use_declaration: T_NS_SEPARATOR namespace_name .
@@ -10384,14 +10384,14 @@
     $default  reduce using rule 22 (use_declaration)
 
 
-State 307
+state 307
 
    21 use_declaration: namespace_name T_AS . T_STRING
 
     T_STRING  shift, and go to state 445
 
 
-State 308
+state 308
 
    18 use_declarations: use_declarations ',' . use_declaration
 
@@ -10402,14 +10402,14 @@
     use_declaration  go to state 446
 
 
-State 309
+state 309
 
    16 top_statement: T_USE use_declarations ';' .
 
     $default  reduce using rule 16 (top_statement)
 
 
-State 310
+state 310
 
   176 global_var: '$' '{' . expr '}'
 
@@ -10486,21 +10486,21 @@
     class_constant                     go to state 110
 
 
-State 311
+state 311
 
   175 global_var: '$' r_variable .
 
     $default  reduce using rule 175 (global_var)
 
 
-State 312
+state 312
 
   381 r_variable: variable .
 
     $default  reduce using rule 381 (r_variable)
 
 
-State 313
+state 313
 
   172 global_var_list: global_var_list ',' . global_var
 
@@ -10510,14 +10510,14 @@
     global_var  go to state 448
 
 
-State 314
+state 314
 
    61 unticked_statement: T_GLOBAL global_var_list ';' .
 
     $default  reduce using rule 61 (unticked_statement)
 
 
-State 315
+state 315
 
   180 static_var_list: T_VARIABLE '=' . static_scalar
 
@@ -10547,7 +10547,7 @@
     static_class_constant  go to state 442
 
 
-State 316
+state 316
 
   177 static_var_list: static_var_list ',' . T_VARIABLE
   178                | static_var_list ',' . T_VARIABLE '=' static_scalar
@@ -10555,14 +10555,14 @@
     T_VARIABLE  shift, and go to state 450
 
 
-State 317
+state 317
 
    62 unticked_statement: T_STATIC static_var_list ';' .
 
     $default  reduce using rule 62 (unticked_statement)
 
 
-State 318
+state 318
 
    66 unticked_statement: T_UNSET '(' unset_variables . ')' ';'
    92 unset_variables: unset_variables . ',' unset_variable
@@ -10571,28 +10571,28 @@
     ')'  shift, and go to state 452
 
 
-State 319
+state 319
 
    91 unset_variables: unset_variable .
 
     $default  reduce using rule 91 (unset_variables)
 
 
-State 320
+state 320
 
    93 unset_variable: variable .
 
     $default  reduce using rule 93 (unset_variable)
 
 
-State 321
+state 321
 
   459 isset_variables: variable .
 
     $default  reduce using rule 459 (isset_variables)
 
 
-State 322
+state 322
 
   452 internal_functions_in_yacc: T_ISSET '(' isset_variables . ')'
   461 isset_variables: isset_variables . ',' $@68 variable
@@ -10601,21 +10601,21 @@
     ')'  shift, and go to state 454
 
 
-State 323
+state 323
 
   453 internal_functions_in_yacc: T_EMPTY '(' variable . ')'
 
     ')'  shift, and go to state 455
 
 
-State 324
+state 324
 
    10 top_statement: T_HALT_COMPILER '(' ')' . ';'
 
     ';'  shift, and go to state 456
 
 
-State 325
+state 325
 
   216 expr_without_variable: T_LIST '(' $@39 . assignment_list ')' '=' expr
 
@@ -10645,7 +10645,7 @@
     assignment_list_element            go to state 460
 
 
-State 326
+state 326
 
   437 non_empty_array_pair_list: '&' . w_variable
 
@@ -10671,7 +10671,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 327
+state 327
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -10735,14 +10735,14 @@
     $default  reduce using rule 433 (non_empty_array_pair_list)
 
 
-State 328
+state 328
 
   290 expr_without_variable: T_ARRAY '(' array_pair_list . ')'
 
     ')'  shift, and go to state 464
 
 
-State 329
+state 329
 
   429 array_pair_list: non_empty_array_pair_list . possible_comma
   430 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr
@@ -10757,7 +10757,7 @@
     possible_comma  go to state 466
 
 
-State 330
+state 330
 
   444 encaps_var: T_VARIABLE '[' . $@67 encaps_var_offset ']'
 
@@ -10766,28 +10766,28 @@
     $@67  go to state 467
 
 
-State 331
+state 331
 
   445 encaps_var: T_VARIABLE T_OBJECT_OPERATOR . T_STRING
 
     T_STRING  shift, and go to state 468
 
 
-State 332
+state 332
 
   352 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC .
 
     $default  reduce using rule 352 (common_scalar)
 
 
-State 333
+state 333
 
   441 encaps_list: T_ENCAPSED_AND_WHITESPACE encaps_var .
 
     $default  reduce using rule 441 (encaps_list)
 
 
-State 334
+state 334
 
   363 scalar: T_STRING_VARNAME .
   447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'
@@ -10797,7 +10797,7 @@
     $default  reduce using rule 363 (scalar)
 
 
-State 335
+state 335
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -10857,35 +10857,35 @@
     '}'                    shift, and go to state 470
 
 
-State 336
+state 336
 
   448 encaps_var: T_CURLY_OPEN variable . '}'
 
     '}'  shift, and go to state 471
 
 
-State 337
+state 337
 
   439 encaps_list: encaps_list T_ENCAPSED_AND_WHITESPACE .
 
     $default  reduce using rule 439 (encaps_list)
 
 
-State 338
+state 338
 
   370 scalar: T_START_HEREDOC encaps_list T_END_HEREDOC .
 
     $default  reduce using rule 370 (scalar)
 
 
-State 339
+state 339
 
   438 encaps_list: encaps_list encaps_var .
 
     $default  reduce using rule 438 (encaps_list)
 
 
-State 340
+state 340
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name . '(' $@52 function_call_parameter_list ')'
@@ -10899,7 +10899,7 @@
     $default                reduce using rule 366 (scalar)
 
 
-State 341
+state 341
 
    15 top_statement: T_NAMESPACE '{' $@3 . top_statement_list '}'
 
@@ -10908,14 +10908,14 @@
     top_statement_list  go to state 473
 
 
-State 342
+state 342
 
    11 top_statement: T_NAMESPACE namespace_name ';' .
 
     $default  reduce using rule 11 (top_statement)
 
 
-State 343
+state 343
 
    13 top_statement: T_NAMESPACE namespace_name '{' . $@2 top_statement_list '}'
 
@@ -10924,7 +10924,7 @@
     $@2  go to state 474
 
 
-State 344
+state 344
 
   307 function_call: T_NS_SEPARATOR namespace_name '(' . $@53 function_call_parameter_list ')'
 
@@ -10933,21 +10933,21 @@
     $@53  go to state 475
 
 
-State 345
+state 345
 
   272 expr_without_variable: '(' expr ')' .
 
     $default  reduce using rule 272 (expr_without_variable)
 
 
-State 346
+state 346
 
    35 unticked_statement: '{' inner_statement_list '}' .
 
     $default  reduce using rule 35 (unticked_statement)
 
 
-State 347
+state 347
 
    27 inner_statement_list: inner_statement_list $@4 . inner_statement
 
@@ -11057,7 +11057,7 @@
     class_constant                           go to state 110
 
 
-State 348
+state 348
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -11117,28 +11117,28 @@
     '}'                    shift, and go to state 481
 
 
-State 349
+state 349
 
   291 expr_without_variable: '`' backticks_expr '`' .
 
     $default  reduce using rule 291 (expr_without_variable)
 
 
-State 350
+state 350
 
   369 scalar: '"' encaps_list '"' .
 
     $default  reduce using rule 369 (scalar)
 
 
-State 351
+state 351
 
     6 namespace_name: namespace_name T_NS_SEPARATOR T_STRING .
 
     $default  reduce using rule 6 (namespace_name)
 
 
-State 352
+state 352
 
   303 function_call: namespace_name '(' $@51 . function_call_parameter_list ')'
 
@@ -11220,14 +11220,14 @@
     class_constant                          go to state 110
 
 
-State 353
+state 353
 
    24 constant_declaration: constant_declaration ',' T_STRING . '=' static_scalar
 
     '='  shift, and go to state 487
 
 
-State 354
+state 354
 
   108 extends_from: T_EXTENDS . fully_qualified_class_name
 
@@ -11239,7 +11239,7 @@
     fully_qualified_class_name  go to state 491
 
 
-State 355
+state 355
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from . $@30 implements_list '{' class_statement_list '}'
 
@@ -11248,7 +11248,7 @@
     $@30  go to state 492
 
 
-State 356
+state 356
 
   103 unticked_class_declaration_statement: interface_entry T_STRING $@31 . interface_extends_list '{' class_statement_list '}'
 
@@ -11259,7 +11259,7 @@
     interface_extends_list  go to state 494
 
 
-State 357
+state 357
 
    99 unticked_function_declaration_statement: function is_reference T_STRING . $@29 '(' parameter_list ')' '{' inner_statement_list '}'
 
@@ -11268,7 +11268,7 @@
     $@29  go to state 495
 
 
-State 358
+state 358
 
   294 expr_without_variable: function is_reference '(' . @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
@@ -11277,7 +11277,7 @@
     @50  go to state 496
 
 
-State 359
+state 359
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' $@54 function_call_parameter_list ')'
   462 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
@@ -11287,7 +11287,7 @@
     $default  reduce using rule 462 (class_constant)
 
 
-State 360
+state 360
 
   311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' $@55 function_call_parameter_list ')'
   397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
@@ -11297,7 +11297,7 @@
     $default  reduce using rule 397 (static_member)
 
 
-State 361
+state 361
 
   395 variable_without_objects: reference_variable .
   405 reference_variable: reference_variable . '[' dim_offset ']'
@@ -11309,7 +11309,7 @@
     $default  reduce using rule 395 (variable_without_objects)
 
 
-State 362
+state 362
 
   396 variable_without_objects: simple_indirect_reference . reference_variable
   421 simple_indirect_reference: simple_indirect_reference . '$'
@@ -11321,7 +11321,7 @@
     compound_variable   go to state 107
 
 
-State 363
+state 363
 
   244 expr_without_variable: expr T_LOGICAL_OR $@44 . expr
 
@@ -11398,7 +11398,7 @@
     class_constant                     go to state 110
 
 
-State 364
+state 364
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -11457,7 +11457,7 @@
     $default  reduce using rule 247 (expr_without_variable)
 
 
-State 365
+state 365
 
   246 expr_without_variable: expr T_LOGICAL_AND $@45 . expr
 
@@ -11534,7 +11534,7 @@
     class_constant                     go to state 110
 
 
-State 366
+state 366
 
   277 expr_without_variable: expr '?' ':' . $@48 expr
 
@@ -11543,7 +11543,7 @@
     $@48  go to state 502
 
 
-State 367
+state 367
 
   275 expr_without_variable: expr '?' $@46 . expr ':' $@47 expr
 
@@ -11620,7 +11620,7 @@
     class_constant                     go to state 110
 
 
-State 368
+state 368
 
   240 expr_without_variable: expr T_BOOLEAN_OR $@42 . expr
 
@@ -11697,7 +11697,7 @@
     class_constant                     go to state 110
 
 
-State 369
+state 369
 
   242 expr_without_variable: expr T_BOOLEAN_AND $@43 . expr
 
@@ -11774,7 +11774,7 @@
     class_constant                     go to state 110
 
 
-State 370
+state 370
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -11828,7 +11828,7 @@
     $default  reduce using rule 248 (expr_without_variable)
 
 
-State 371
+state 371
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -11881,7 +11881,7 @@
     $default  reduce using rule 250 (expr_without_variable)
 
 
-State 372
+state 372
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -11933,7 +11933,7 @@
     $default  reduce using rule 249 (expr_without_variable)
 
 
-State 373
+state 373
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -11986,7 +11986,7 @@
     $default  reduce using rule 264 (expr_without_variable)
 
 
-State 374
+state 374
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12039,7 +12039,7 @@
     $default  reduce using rule 263 (expr_without_variable)
 
 
-State 375
+state 375
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12092,7 +12092,7 @@
     $default  reduce using rule 266 (expr_without_variable)
 
 
-State 376
+state 376
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12145,7 +12145,7 @@
     $default  reduce using rule 265 (expr_without_variable)
 
 
-State 377
+state 377
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12194,7 +12194,7 @@
     $default  reduce using rule 267 (expr_without_variable)
 
 
-State 378
+state 378
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12243,7 +12243,7 @@
     $default  reduce using rule 269 (expr_without_variable)
 
 
-State 379
+state 379
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12292,7 +12292,7 @@
     $default  reduce using rule 270 (expr_without_variable)
 
 
-State 380
+state 380
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12341,7 +12341,7 @@
     $default  reduce using rule 268 (expr_without_variable)
 
 
-State 381
+state 381
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12383,7 +12383,7 @@
     $default  reduce using rule 258 (expr_without_variable)
 
 
-State 382
+state 382
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12425,7 +12425,7 @@
     $default  reduce using rule 257 (expr_without_variable)
 
 
-State 383
+state 383
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12464,7 +12464,7 @@
     $default  reduce using rule 252 (expr_without_variable)
 
 
-State 384
+state 384
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12503,7 +12503,7 @@
     $default  reduce using rule 253 (expr_without_variable)
 
 
-State 385
+state 385
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12542,7 +12542,7 @@
     $default  reduce using rule 251 (expr_without_variable)
 
 
-State 386
+state 386
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12578,7 +12578,7 @@
     $default  reduce using rule 254 (expr_without_variable)
 
 
-State 387
+state 387
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12614,7 +12614,7 @@
     $default  reduce using rule 255 (expr_without_variable)
 
 
-State 388
+state 388
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -12650,14 +12650,14 @@
     $default  reduce using rule 256 (expr_without_variable)
 
 
-State 389
+state 389
 
   271 expr_without_variable: expr T_INSTANCEOF class_name_reference .
 
     $default  reduce using rule 271 (expr_without_variable)
 
 
-State 390
+state 390
 
   218 expr_without_variable: variable '=' '&' . variable
   220                      | variable '=' '&' . T_NEW class_name_reference $@40 ctor_arguments
@@ -12684,7 +12684,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 391
+state 391
 
   217 expr_without_variable: variable '=' expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -12742,7 +12742,7 @@
     $default  reduce using rule 217 (expr_without_variable)
 
 
-State 392
+state 392
 
   234 expr_without_variable: variable T_SR_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -12800,7 +12800,7 @@
     $default  reduce using rule 234 (expr_without_variable)
 
 
-State 393
+state 393
 
   233 expr_without_variable: variable T_SL_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -12858,7 +12858,7 @@
     $default  reduce using rule 233 (expr_without_variable)
 
 
-State 394
+state 394
 
   232 expr_without_variable: variable T_XOR_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -12916,7 +12916,7 @@
     $default  reduce using rule 232 (expr_without_variable)
 
 
-State 395
+state 395
 
   231 expr_without_variable: variable T_OR_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -12974,7 +12974,7 @@
     $default  reduce using rule 231 (expr_without_variable)
 
 
-State 396
+state 396
 
   230 expr_without_variable: variable T_AND_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13032,7 +13032,7 @@
     $default  reduce using rule 230 (expr_without_variable)
 
 
-State 397
+state 397
 
   229 expr_without_variable: variable T_MOD_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13090,7 +13090,7 @@
     $default  reduce using rule 229 (expr_without_variable)
 
 
-State 398
+state 398
 
   228 expr_without_variable: variable T_CONCAT_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13148,7 +13148,7 @@
     $default  reduce using rule 228 (expr_without_variable)
 
 
-State 399
+state 399
 
   227 expr_without_variable: variable T_DIV_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13206,7 +13206,7 @@
     $default  reduce using rule 227 (expr_without_variable)
 
 
-State 400
+state 400
 
   226 expr_without_variable: variable T_MUL_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13264,7 +13264,7 @@
     $default  reduce using rule 226 (expr_without_variable)
 
 
-State 401
+state 401
 
   225 expr_without_variable: variable T_MINUS_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13322,7 +13322,7 @@
     $default  reduce using rule 225 (expr_without_variable)
 
 
-State 402
+state 402
 
   224 expr_without_variable: variable T_PLUS_EQUAL expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -13380,7 +13380,7 @@
     $default  reduce using rule 224 (expr_without_variable)
 
 
-State 403
+state 403
 
   317 function_call: variable_without_objects '(' $@58 . function_call_parameter_list ')'
 
@@ -13462,7 +13462,7 @@
     class_constant                          go to state 110
 
 
-State 404
+state 404
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' $@56 function_call_parameter_list ')'
   463 class_constant: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
@@ -13472,7 +13472,7 @@
     $default  reduce using rule 463 (class_constant)
 
 
-State 405
+state 405
 
   315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' $@57 function_call_parameter_list ')'
   398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
@@ -13482,7 +13482,7 @@
     $default  reduce using rule 398 (static_member)
 
 
-State 406
+state 406
 
   386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR $@61 . object_property $@62 method_or_not variable_properties
 
@@ -13500,7 +13500,7 @@
     simple_indirect_reference  go to state 362
 
 
-State 407
+state 407
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -13561,14 +13561,14 @@
     $default  reduce using rule 411 (dim_offset)
 
 
-State 408
+state 408
 
   405 reference_variable: reference_variable '[' dim_offset . ']'
 
     ']'  shift, and go to state 517
 
 
-State 409
+state 409
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -13628,14 +13628,14 @@
     '}'                    shift, and go to state 518
 
 
-State 410
+state 410
 
   456 internal_functions_in_yacc: T_EVAL '(' expr ')' .
 
     $default  reduce using rule 456 (internal_functions_in_yacc)
 
 
-State 411
+state 411
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name . '(' $@52 function_call_parameter_list ')'
@@ -13647,21 +13647,21 @@
     $default  reduce using rule 320 (class_name)
 
 
-State 412
+state 412
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' $@54 function_call_parameter_list ')'
 
     '('  shift, and go to state 497
 
 
-State 413
+state 413
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' $@56 function_call_parameter_list ')'
 
     '('  shift, and go to state 509
 
 
-State 414
+state 414
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   320 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
@@ -13671,14 +13671,14 @@
     $default  reduce using rule 320 (class_name)
 
 
-State 415
+state 415
 
   397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
 
     $default  reduce using rule 397 (static_member)
 
 
-State 416
+state 416
 
   341 ctor_arguments: '(' . function_call_parameter_list ')'
 
@@ -13760,21 +13760,21 @@
     class_constant                          go to state 110
 
 
-State 417
+state 417
 
   222 expr_without_variable: T_NEW class_name_reference $@41 ctor_arguments .
 
     $default  reduce using rule 222 (expr_without_variable)
 
 
-State 418
+state 418
 
   398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
 
     $default  reduce using rule 398 (static_member)
 
 
-State 419
+state 419
 
   329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR $@59 . object_property $@60 dynamic_class_name_variable_properties
 
@@ -13792,14 +13792,14 @@
     simple_indirect_reference  go to state 362
 
 
-State 420
+state 420
 
   336 exit_expr: '(' expr ')' .
 
     $default  reduce using rule 336 (exit_expr)
 
 
-State 421
+state 421
 
    38 unticked_statement: T_IF '(' expr ')' . $@5 statement $@6 elseif_list else_single
    41                   | T_IF '(' expr ')' . ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';'
@@ -13811,7 +13811,7 @@
     $@5  go to state 522
 
 
-State 422
+state 422
 
   208 echo_expr_list: echo_expr_list ',' expr .
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -13872,14 +13872,14 @@
     $default  reduce using rule 208 (echo_expr_list)
 
 
-State 423
+state 423
 
    47 unticked_statement: T_DO $@11 statement T_WHILE . '(' $@12 expr ')' ';'
 
     '('  shift, and go to state 523
 
 
-State 424
+state 424
 
    44 unticked_statement: T_WHILE '(' $@9 expr . ')' $@10 while_statement
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -13939,7 +13939,7 @@
     ')'                    shift, and go to state 524
 
 
-State 425
+state 425
 
    51 unticked_statement: T_FOR '(' for_expr ';' . $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement
 
@@ -13948,7 +13948,7 @@
     $@13  go to state 525
 
 
-State 426
+state 426
 
   213 non_empty_for_expr: non_empty_for_expr ',' . $@38 expr
 
@@ -13957,7 +13957,7 @@
     $@38  go to state 526
 
 
-State 427
+state 427
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS . $@19 variable foreach_optional_arg ')' $@20 foreach_statement
 
@@ -13966,7 +13966,7 @@
     $@19  go to state 527
 
 
-State 428
+state 428
 
    69 unticked_statement: T_FOREACH '(' variable T_AS . $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
 
@@ -13975,14 +13975,14 @@
     $@17  go to state 528
 
 
-State 429
+state 429
 
   126 declare_list: T_STRING . '=' static_scalar
 
     '='  shift, and go to state 529
 
 
-State 430
+state 430
 
    74 unticked_statement: T_DECLARE $@21 '(' declare_list . ')' declare_statement
   127 declare_list: declare_list . ',' T_STRING '=' static_scalar
@@ -13991,7 +13991,7 @@
     ')'  shift, and go to state 531
 
 
-State 431
+state 431
 
    53 unticked_statement: T_SWITCH '(' expr ')' . $@16 switch_case_list
 
@@ -14000,7 +14000,7 @@
     $@16  go to state 532
 
 
-State 432
+state 432
 
   358 static_scalar: '+' . static_scalar
 
@@ -14030,7 +14030,7 @@
     static_class_constant  go to state 442
 
 
-State 433
+state 433
 
   359 static_scalar: '-' . static_scalar
 
@@ -14060,14 +14060,14 @@
     static_class_constant  go to state 442
 
 
-State 434
+state 434
 
   360 static_scalar: T_ARRAY . '(' static_array_pair_list ')'
 
     '('  shift, and go to state 535
 
 
-State 435
+state 435
 
   352 common_scalar: T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
   353              | T_START_HEREDOC . T_END_HEREDOC
@@ -14076,7 +14076,7 @@
     T_END_HEREDOC              shift, and go to state 196
 
 
-State 436
+state 436
 
   320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
   356 static_scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
@@ -14084,7 +14084,7 @@
     T_NS_SEPARATOR  shift, and go to state 537
 
 
-State 437
+state 437
 
   321 class_name: T_NS_SEPARATOR . namespace_name
   357 static_scalar: T_NS_SEPARATOR . namespace_name
@@ -14094,7 +14094,7 @@
     namespace_name  go to state 538
 
 
-State 438
+state 438
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   319 class_name: namespace_name .
@@ -14106,35 +14106,35 @@
     $default                reduce using rule 355 (static_scalar)
 
 
-State 439
+state 439
 
   362 static_class_constant: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
 
     T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 539
 
 
-State 440
+state 440
 
   354 static_scalar: common_scalar .
 
     $default  reduce using rule 354 (static_scalar)
 
 
-State 441
+state 441
 
    25 constant_declaration: T_CONST T_STRING '=' static_scalar .
 
     $default  reduce using rule 25 (constant_declaration)
 
 
-State 442
+state 442
 
   361 static_scalar: static_class_constant .
 
     $default  reduce using rule 361 (static_scalar)
 
 
-State 443
+state 443
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list . '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
@@ -14146,28 +14146,28 @@
     $@4  go to state 347
 
 
-State 444
+state 444
 
    23 use_declaration: T_NS_SEPARATOR namespace_name T_AS . T_STRING
 
     T_STRING  shift, and go to state 541
 
 
-State 445
+state 445
 
    21 use_declaration: namespace_name T_AS T_STRING .
 
     $default  reduce using rule 21 (use_declaration)
 
 
-State 446
+state 446
 
    18 use_declarations: use_declarations ',' use_declaration .
 
     $default  reduce using rule 18 (use_declarations)
 
 
-State 447
+state 447
 
   176 global_var: '$' '{' expr . '}'
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -14227,21 +14227,21 @@
     '}'                    shift, and go to state 542
 
 
-State 448
+state 448
 
   172 global_var_list: global_var_list ',' global_var .
 
     $default  reduce using rule 172 (global_var_list)
 
 
-State 449
+state 449
 
   180 static_var_list: T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 180 (static_var_list)
 
 
-State 450
+state 450
 
   177 static_var_list: static_var_list ',' T_VARIABLE .
   178                | static_var_list ',' T_VARIABLE . '=' static_scalar
@@ -14251,7 +14251,7 @@
     $default  reduce using rule 177 (static_var_list)
 
 
-State 451
+state 451
 
    92 unset_variables: unset_variables ',' . unset_variable
 
@@ -14277,14 +14277,14 @@
     simple_indirect_reference          go to state 108
 
 
-State 452
+state 452
 
    66 unticked_statement: T_UNSET '(' unset_variables ')' . ';'
 
     ';'  shift, and go to state 545
 
 
-State 453
+state 453
 
   461 isset_variables: isset_variables ',' . $@68 variable
 
@@ -14293,42 +14293,42 @@
     $@68  go to state 546
 
 
-State 454
+state 454
 
   452 internal_functions_in_yacc: T_ISSET '(' isset_variables ')' .
 
     $default  reduce using rule 452 (internal_functions_in_yacc)
 
 
-State 455
+state 455
 
   453 internal_functions_in_yacc: T_EMPTY '(' variable ')' .
 
     $default  reduce using rule 453 (internal_functions_in_yacc)
 
 
-State 456
+state 456
 
    10 top_statement: T_HALT_COMPILER '(' ')' ';' .
 
     $default  reduce using rule 10 (top_statement)
 
 
-State 457
+state 457
 
   426 assignment_list_element: T_LIST . '(' $@66 assignment_list ')'
 
     '('  shift, and go to state 547
 
 
-State 458
+state 458
 
   424 assignment_list_element: variable .
 
     $default  reduce using rule 424 (assignment_list_element)
 
 
-State 459
+state 459
 
   216 expr_without_variable: T_LIST '(' $@39 assignment_list . ')' '=' expr
   422 assignment_list: assignment_list . ',' assignment_list_element
@@ -14337,28 +14337,28 @@
     ')'  shift, and go to state 549
 
 
-State 460
+state 460
 
   423 assignment_list: assignment_list_element .
 
     $default  reduce using rule 423 (assignment_list)
 
 
-State 461
+state 461
 
   437 non_empty_array_pair_list: '&' w_variable .
 
     $default  reduce using rule 437 (non_empty_array_pair_list)
 
 
-State 462
+state 462
 
   382 w_variable: variable .
 
     $default  reduce using rule 382 (w_variable)
 
 
-State 463
+state 463
 
   432 non_empty_array_pair_list: expr T_DOUBLE_ARROW . expr
   436                          | expr T_DOUBLE_ARROW . '&' w_variable
@@ -14437,14 +14437,14 @@
     class_constant                     go to state 110
 
 
-State 464
+state 464
 
   290 expr_without_variable: T_ARRAY '(' array_pair_list ')' .
 
     $default  reduce using rule 290 (expr_without_variable)
 
 
-State 465
+state 465
 
   374 possible_comma: ',' .
   430 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr
@@ -14528,14 +14528,14 @@
     class_constant                     go to state 110
 
 
-State 466
+state 466
 
   429 array_pair_list: non_empty_array_pair_list possible_comma .
 
     $default  reduce using rule 429 (array_pair_list)
 
 
-State 467
+state 467
 
   444 encaps_var: T_VARIABLE '[' $@67 . encaps_var_offset ']'
 
@@ -14546,14 +14546,14 @@
     encaps_var_offset  go to state 557
 
 
-State 468
+state 468
 
   445 encaps_var: T_VARIABLE T_OBJECT_OPERATOR T_STRING .
 
     $default  reduce using rule 445 (encaps_var)
 
 
-State 469
+state 469
 
   447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'
 
@@ -14630,21 +14630,21 @@
     class_constant                     go to state 110
 
 
-State 470
+state 470
 
   446 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES expr '}' .
 
     $default  reduce using rule 446 (encaps_var)
 
 
-State 471
+state 471
 
   448 encaps_var: T_CURLY_OPEN variable '}' .
 
     $default  reduce using rule 448 (encaps_var)
 
 
-State 472
+state 472
 
   305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' . $@52 function_call_parameter_list ')'
 
@@ -14653,7 +14653,7 @@
     $@52  go to state 559
 
 
-State 473
+state 473
 
     3 top_statement_list: top_statement_list . $@1 top_statement
    15 top_statement: T_NAMESPACE '{' $@3 top_statement_list . '}'
@@ -14665,7 +14665,7 @@
     $@1  go to state 4
 
 
-State 474
+state 474
 
    13 top_statement: T_NAMESPACE namespace_name '{' $@2 . top_statement_list '}'
 
@@ -14674,7 +14674,7 @@
     top_statement_list  go to state 561
 
 
-State 475
+state 475
 
   307 function_call: T_NS_SEPARATOR namespace_name '(' $@53 . function_call_parameter_list ')'
 
@@ -14756,49 +14756,49 @@
     class_constant                          go to state 110
 
 
-State 476
+state 476
 
    32 inner_statement: T_HALT_COMPILER . '(' ')' ';'
 
     '('  shift, and go to state 563
 
 
-State 477
+state 477
 
    27 inner_statement_list: inner_statement_list $@4 inner_statement .
 
     $default  reduce using rule 27 (inner_statement_list)
 
 
-State 478
+state 478
 
    29 inner_statement: statement .
 
     $default  reduce using rule 29 (inner_statement)
 
 
-State 479
+state 479
 
    30 inner_statement: function_declaration_statement .
 
     $default  reduce using rule 30 (inner_statement)
 
 
-State 480
+state 480
 
    31 inner_statement: class_declaration_statement .
 
     $default  reduce using rule 31 (inner_statement)
 
 
-State 481
+state 481
 
   409 compound_variable: '$' '{' expr '}' .
 
     $default  reduce using rule 409 (compound_variable)
 
 
-State 482
+state 482
 
   168 non_empty_function_call_parameter_list: '&' . w_variable
 
@@ -14824,14 +14824,14 @@
     simple_indirect_reference          go to state 108
 
 
-State 483
+state 483
 
   303 function_call: namespace_name '(' $@51 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 565
 
 
-State 484
+state 484
 
   164 function_call_parameter_list: non_empty_function_call_parameter_list .
   169 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' expr_without_variable
@@ -14843,7 +14843,7 @@
     $default  reduce using rule 164 (function_call_parameter_list)
 
 
-State 485
+state 485
 
   166 non_empty_function_call_parameter_list: expr_without_variable .
   380 expr: expr_without_variable .
@@ -14853,7 +14853,7 @@
     $default  reduce using rule 380 (expr)
 
 
-State 486
+state 486
 
   167 non_empty_function_call_parameter_list: variable .
   217 expr_without_variable: variable . '=' expr
@@ -14893,7 +14893,7 @@
     $default  reduce using rule 381 (r_variable)
 
 
-State 487
+state 487
 
    24 constant_declaration: constant_declaration ',' T_STRING '=' . static_scalar
 
@@ -14923,14 +14923,14 @@
     static_class_constant  go to state 442
 
 
-State 488
+state 488
 
   323 fully_qualified_class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
     T_NS_SEPARATOR  shift, and go to state 568
 
 
-State 489
+state 489
 
   324 fully_qualified_class_name: T_NS_SEPARATOR . namespace_name
 
@@ -14939,7 +14939,7 @@
     namespace_name  go to state 569
 
 
-State 490
+state 490
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   322 fully_qualified_class_name: namespace_name .
@@ -14949,14 +14949,14 @@
     $default  reduce using rule 322 (fully_qualified_class_name)
 
 
-State 491
+state 491
 
   108 extends_from: T_EXTENDS fully_qualified_class_name .
 
     $default  reduce using rule 108 (extends_from)
 
 
-State 492
+state 492
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from $@30 . implements_list '{' class_statement_list '}'
 
@@ -14967,7 +14967,7 @@
     implements_list  go to state 571
 
 
-State 493
+state 493
 
   111 interface_extends_list: T_EXTENDS . interface_list
 
@@ -14980,21 +14980,21 @@
     fully_qualified_class_name  go to state 573
 
 
-State 494
+state 494
 
   103 unticked_class_declaration_statement: interface_entry T_STRING $@31 interface_extends_list . '{' class_statement_list '}'
 
     '{'  shift, and go to state 574
 
 
-State 495
+state 495
 
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 . '(' parameter_list ')' '{' inner_statement_list '}'
 
     '('  shift, and go to state 575
 
 
-State 496
+state 496
 
   294 expr_without_variable: function is_reference '(' @50 . parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
@@ -15013,7 +15013,7 @@
     fully_qualified_class_name  go to state 580
 
 
-State 497
+state 497
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . $@54 function_call_parameter_list ')'
 
@@ -15022,7 +15022,7 @@
     $@54  go to state 581
 
 
-State 498
+state 498
 
   311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . $@55 function_call_parameter_list ')'
 
@@ -15031,7 +15031,7 @@
     $@55  go to state 582
 
 
-State 499
+state 499
 
   396 variable_without_objects: simple_indirect_reference reference_variable .
   405 reference_variable: reference_variable . '[' dim_offset ']'
@@ -15043,7 +15043,7 @@
     $default  reduce using rule 396 (variable_without_objects)
 
 
-State 500
+state 500
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -15103,7 +15103,7 @@
     $default  reduce using rule 244 (expr_without_variable)
 
 
-State 501
+state 501
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -15161,7 +15161,7 @@
     $default  reduce using rule 246 (expr_without_variable)
 
 
-State 502
+state 502
 
   277 expr_without_variable: expr '?' ':' $@48 . expr
 
@@ -15238,7 +15238,7 @@
     class_constant                     go to state 110
 
 
-State 503
+state 503
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -15298,7 +15298,7 @@
     T_INSTANCEOF           shift, and go to state 247
 
 
-State 504
+state 504
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   240                      | expr T_BOOLEAN_OR $@42 expr .
@@ -15354,7 +15354,7 @@
     $default  reduce using rule 240 (expr_without_variable)
 
 
-State 505
+state 505
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -15409,7 +15409,7 @@
     $default  reduce using rule 242 (expr_without_variable)
 
 
-State 506
+state 506
 
   220 expr_without_variable: variable '=' '&' T_NEW . class_name_reference $@40 ctor_arguments
 
@@ -15432,21 +15432,21 @@
     simple_indirect_reference     go to state 151
 
 
-State 507
+state 507
 
   218 expr_without_variable: variable '=' '&' variable .
 
     $default  reduce using rule 218 (expr_without_variable)
 
 
-State 508
+state 508
 
   317 function_call: variable_without_objects '(' $@58 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 586
 
 
-State 509
+state 509
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . $@56 function_call_parameter_list ')'
 
@@ -15455,7 +15455,7 @@
     $@56  go to state 587
 
 
-State 510
+state 510
 
   315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . $@57 function_call_parameter_list ')'
 
@@ -15464,14 +15464,14 @@
     $@57  go to state 588
 
 
-State 511
+state 511
 
   418 variable_name: T_STRING .
 
     $default  reduce using rule 418 (variable_name)
 
 
-State 512
+state 512
 
   419 variable_name: '{' . expr '}'
 
@@ -15548,7 +15548,7 @@
     class_constant                     go to state 110
 
 
-State 513
+state 513
 
   414 object_property: variable_without_objects . $@65
 
@@ -15557,7 +15557,7 @@
     $@65  go to state 590
 
 
-State 514
+state 514
 
   386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR $@61 object_property . $@62 method_or_not variable_properties
 
@@ -15566,7 +15566,7 @@
     $@62  go to state 591
 
 
-State 515
+state 515
 
   412 object_property: object_dim_list .
   415 object_dim_list: object_dim_list . '[' dim_offset ']'
@@ -15578,35 +15578,35 @@
     $default  reduce using rule 412 (object_property)
 
 
-State 516
+state 516
 
   417 object_dim_list: variable_name .
 
     $default  reduce using rule 417 (object_dim_list)
 
 
-State 517
+state 517
 
   405 reference_variable: reference_variable '[' dim_offset ']' .
 
     $default  reduce using rule 405 (reference_variable)
 
 
-State 518
+state 518
 
   406 reference_variable: reference_variable '{' expr '}' .
 
     $default  reduce using rule 406 (reference_variable)
 
 
-State 519
+state 519
 
   341 ctor_arguments: '(' function_call_parameter_list . ')'
 
     ')'  shift, and go to state 594
 
 
-State 520
+state 520
 
   329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR $@59 object_property . $@60 dynamic_class_name_variable_properties
 
@@ -15615,7 +15615,7 @@
     $@60  go to state 595
 
 
-State 521
+state 521
 
    41 unticked_statement: T_IF '(' expr ')' ':' . $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';'
 
@@ -15624,7 +15624,7 @@
     $@7  go to state 596
 
 
-State 522
+state 522
 
    38 unticked_statement: T_IF '(' expr ')' $@5 . statement $@6 elseif_list else_single
 
@@ -15722,7 +15722,7 @@
     class_constant                     go to state 110
 
 
-State 523
+state 523
 
    47 unticked_statement: T_DO $@11 statement T_WHILE '(' . $@12 expr ')' ';'
 
@@ -15731,7 +15731,7 @@
     $@12  go to state 598
 
 
-State 524
+state 524
 
    44 unticked_statement: T_WHILE '(' $@9 expr ')' . $@10 while_statement
 
@@ -15740,7 +15740,7 @@
     $@10  go to state 599
 
 
-State 525
+state 525
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 . for_expr ';' $@14 for_expr ')' $@15 for_statement
 
@@ -15821,7 +15821,7 @@
     class_constant                     go to state 110
 
 
-State 526
+state 526
 
   213 non_empty_for_expr: non_empty_for_expr ',' $@38 . expr
 
@@ -15898,7 +15898,7 @@
     class_constant                     go to state 110
 
 
-State 527
+state 527
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS $@19 . variable foreach_optional_arg ')' $@20 foreach_statement
 
@@ -15923,7 +15923,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 528
+state 528
 
    69 unticked_statement: T_FOREACH '(' variable T_AS $@17 . foreach_variable foreach_optional_arg ')' $@18 foreach_statement
 
@@ -15950,7 +15950,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 529
+state 529
 
   126 declare_list: T_STRING '=' . static_scalar
 
@@ -15980,14 +15980,14 @@
     static_class_constant  go to state 442
 
 
-State 530
+state 530
 
   127 declare_list: declare_list ',' . T_STRING '=' static_scalar
 
     T_STRING  shift, and go to state 607
 
 
-State 531
+state 531
 
    74 unticked_statement: T_DECLARE $@21 '(' declare_list ')' . declare_statement
 
@@ -16087,7 +16087,7 @@
     class_constant                     go to state 110
 
 
-State 532
+state 532
 
    53 unticked_statement: T_SWITCH '(' expr ')' $@16 . switch_case_list
 
@@ -16097,21 +16097,21 @@
     switch_case_list  go to state 613
 
 
-State 533
+state 533
 
   358 static_scalar: '+' static_scalar .
 
     $default  reduce using rule 358 (static_scalar)
 
 
-State 534
+state 534
 
   359 static_scalar: '-' static_scalar .
 
     $default  reduce using rule 359 (static_scalar)
 
 
-State 535
+state 535
 
   360 static_scalar: T_ARRAY '(' . static_array_pair_list ')'
 
@@ -16145,14 +16145,14 @@
     non_empty_static_array_pair_list  go to state 616
 
 
-State 536
+state 536
 
   352 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC
 
     T_END_HEREDOC  shift, and go to state 332
 
 
-State 537
+state 537
 
   320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
   356 static_scalar: T_NAMESPACE T_NS_SEPARATOR . namespace_name
@@ -16162,7 +16162,7 @@
     namespace_name  go to state 617
 
 
-State 538
+state 538
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   321 class_name: T_NS_SEPARATOR namespace_name .
@@ -16174,35 +16174,35 @@
     $default                reduce using rule 357 (static_scalar)
 
 
-State 539
+state 539
 
   362 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
 
     T_STRING  shift, and go to state 618
 
 
-State 540
+state 540
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' . T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
     T_CATCH  shift, and go to state 619
 
 
-State 541
+state 541
 
    23 use_declaration: T_NS_SEPARATOR namespace_name T_AS T_STRING .
 
     $default  reduce using rule 23 (use_declaration)
 
 
-State 542
+state 542
 
   176 global_var: '$' '{' expr '}' .
 
     $default  reduce using rule 176 (global_var)
 
 
-State 543
+state 543
 
   178 static_var_list: static_var_list ',' T_VARIABLE '=' . static_scalar
 
@@ -16232,21 +16232,21 @@
     static_class_constant  go to state 442
 
 
-State 544
+state 544
 
    92 unset_variables: unset_variables ',' unset_variable .
 
     $default  reduce using rule 92 (unset_variables)
 
 
-State 545
+state 545
 
    66 unticked_statement: T_UNSET '(' unset_variables ')' ';' .
 
     $default  reduce using rule 66 (unticked_statement)
 
 
-State 546
+state 546
 
   461 isset_variables: isset_variables ',' $@68 . variable
 
@@ -16271,7 +16271,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 547
+state 547
 
   426 assignment_list_element: T_LIST '(' . $@66 assignment_list ')'
 
@@ -16280,7 +16280,7 @@
     $@66  go to state 622
 
 
-State 548
+state 548
 
   422 assignment_list: assignment_list ',' . assignment_list_element
 
@@ -16309,14 +16309,14 @@
     assignment_list_element            go to state 623
 
 
-State 549
+state 549
 
   216 expr_without_variable: T_LIST '(' $@39 assignment_list ')' . '=' expr
 
     '='  shift, and go to state 624
 
 
-State 550
+state 550
 
   436 non_empty_array_pair_list: expr T_DOUBLE_ARROW '&' . w_variable
 
@@ -16342,7 +16342,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 551
+state 551
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -16403,7 +16403,7 @@
     $default  reduce using rule 432 (non_empty_array_pair_list)
 
 
-State 552
+state 552
 
   435 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable
 
@@ -16429,7 +16429,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 553
+state 553
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -16493,35 +16493,35 @@
     $default  reduce using rule 431 (non_empty_array_pair_list)
 
 
-State 554
+state 554
 
   449 encaps_var_offset: T_STRING .
 
     $default  reduce using rule 449 (encaps_var_offset)
 
 
-State 555
+state 555
 
   451 encaps_var_offset: T_VARIABLE .
 
     $default  reduce using rule 451 (encaps_var_offset)
 
 
-State 556
+state 556
 
   450 encaps_var_offset: T_NUM_STRING .
 
     $default  reduce using rule 450 (encaps_var_offset)
 
 
-State 557
+state 557
 
   444 encaps_var: T_VARIABLE '[' $@67 encaps_var_offset . ']'
 
     ']'  shift, and go to state 628
 
 
-State 558
+state 558
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -16581,7 +16581,7 @@
     ']'                    shift, and go to state 629
 
 
-State 559
+state 559
 
   305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' $@52 . function_call_parameter_list ')'
 
@@ -16663,14 +16663,14 @@
     class_constant                          go to state 110
 
 
-State 560
+state 560
 
    15 top_statement: T_NAMESPACE '{' $@3 top_statement_list '}' .
 
     $default  reduce using rule 15 (top_statement)
 
 
-State 561
+state 561
 
     3 top_statement_list: top_statement_list . $@1 top_statement
    13 top_statement: T_NAMESPACE namespace_name '{' $@2 top_statement_list . '}'
@@ -16682,35 +16682,35 @@
     $@1  go to state 4
 
 
-State 562
+state 562
 
   307 function_call: T_NS_SEPARATOR namespace_name '(' $@53 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 632
 
 
-State 563
+state 563
 
    32 inner_statement: T_HALT_COMPILER '(' . ')' ';'
 
     ')'  shift, and go to state 633
 
 
-State 564
+state 564
 
   168 non_empty_function_call_parameter_list: '&' w_variable .
 
     $default  reduce using rule 168 (non_empty_function_call_parameter_list)
 
 
-State 565
+state 565
 
   303 function_call: namespace_name '(' $@51 function_call_parameter_list ')' .
 
     $default  reduce using rule 303 (function_call)
 
 
-State 566
+state 566
 
   169 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . expr_without_variable
   170                                       | non_empty_function_call_parameter_list ',' . variable
@@ -16790,14 +16790,14 @@
     class_constant                     go to state 110
 
 
-State 567
+state 567
 
    24 constant_declaration: constant_declaration ',' T_STRING '=' static_scalar .
 
     $default  reduce using rule 24 (constant_declaration)
 
 
-State 568
+state 568
 
   323 fully_qualified_class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
@@ -16806,7 +16806,7 @@
     namespace_name  go to state 637
 
 
-State 569
+state 569
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   324 fully_qualified_class_name: T_NS_SEPARATOR namespace_name .
@@ -16816,7 +16816,7 @@
     $default  reduce using rule 324 (fully_qualified_class_name)
 
 
-State 570
+state 570
 
   113 implements_list: T_IMPLEMENTS . interface_list
 
@@ -16829,14 +16829,14 @@
     fully_qualified_class_name  go to state 573
 
 
-State 571
+state 571
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from $@30 implements_list . '{' class_statement_list '}'
 
     '{'  shift, and go to state 639
 
 
-State 572
+state 572
 
   111 interface_extends_list: T_EXTENDS interface_list .
   115 interface_list: interface_list . ',' fully_qualified_class_name
@@ -16846,14 +16846,14 @@
     $default  reduce using rule 111 (interface_extends_list)
 
 
-State 573
+state 573
 
   114 interface_list: fully_qualified_class_name .
 
     $default  reduce using rule 114 (interface_list)
 
 
-State 574
+state 574
 
   103 unticked_class_declaration_statement: interface_entry T_STRING $@31 interface_extends_list '{' . class_statement_list '}'
 
@@ -16862,7 +16862,7 @@
     class_statement_list  go to state 641
 
 
-State 575
+state 575
 
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 '(' . parameter_list ')' '{' inner_statement_list '}'
 
@@ -16881,21 +16881,21 @@
     fully_qualified_class_name  go to state 580
 
 
-State 576
+state 576
 
   163 optional_class_type: T_ARRAY .
 
     $default  reduce using rule 163 (optional_class_type)
 
 
-State 577
+state 577
 
   294 expr_without_variable: function is_reference '(' @50 parameter_list . ')' lexical_vars '{' inner_statement_list '}'
 
     ')'  shift, and go to state 643
 
 
-State 578
+state 578
 
   151 parameter_list: non_empty_parameter_list .
   157 non_empty_parameter_list: non_empty_parameter_list . ',' optional_class_type T_VARIABLE
@@ -16908,7 +16908,7 @@
     $default  reduce using rule 151 (parameter_list)
 
 
-State 579
+state 579
 
   153 non_empty_parameter_list: optional_class_type . T_VARIABLE
   154                         | optional_class_type . '&' T_VARIABLE
@@ -16919,14 +16919,14 @@
     T_VARIABLE  shift, and go to state 646
 
 
-State 580
+state 580
 
   162 optional_class_type: fully_qualified_class_name .
 
     $default  reduce using rule 162 (optional_class_type)
 
 
-State 581
+state 581
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@54 . function_call_parameter_list ')'
 
@@ -17008,7 +17008,7 @@
     class_constant                          go to state 110
 
 
-State 582
+state 582
 
   311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@55 . function_call_parameter_list ')'
 
@@ -17090,7 +17090,7 @@
     class_constant                          go to state 110
 
 
-State 583
+state 583
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -17147,7 +17147,7 @@
     $default  reduce using rule 277 (expr_without_variable)
 
 
-State 584
+state 584
 
   275 expr_without_variable: expr '?' $@46 expr ':' . $@47 expr
 
@@ -17156,7 +17156,7 @@
     $@47  go to state 649
 
 
-State 585
+state 585
 
   220 expr_without_variable: variable '=' '&' T_NEW class_name_reference . $@40 ctor_arguments
 
@@ -17165,14 +17165,14 @@
     $@40  go to state 650
 
 
-State 586
+state 586
 
   317 function_call: variable_without_objects '(' $@58 function_call_parameter_list ')' .
 
     $default  reduce using rule 317 (function_call)
 
 
-State 587
+state 587
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@56 . function_call_parameter_list ')'
 
@@ -17254,7 +17254,7 @@
     class_constant                          go to state 110
 
 
-State 588
+state 588
 
   315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@57 . function_call_parameter_list ')'
 
@@ -17336,7 +17336,7 @@
     class_constant                          go to state 110
 
 
-State 589
+state 589
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -17396,14 +17396,14 @@
     '}'                    shift, and go to state 653
 
 
-State 590
+state 590
 
   414 object_property: variable_without_objects $@65 .
 
     $default  reduce using rule 414 (object_property)
 
 
-State 591
+state 591
 
   386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR $@61 object_property $@62 . method_or_not variable_properties
 
@@ -17414,7 +17414,7 @@
     method_or_not  go to state 655
 
 
-State 592
+state 592
 
   415 object_dim_list: object_dim_list '[' . dim_offset ']'
 
@@ -17494,7 +17494,7 @@
     class_constant                     go to state 110
 
 
-State 593
+state 593
 
   416 object_dim_list: object_dim_list '{' . expr '}'
 
@@ -17571,14 +17571,14 @@
     class_constant                     go to state 110
 
 
-State 594
+state 594
 
   341 ctor_arguments: '(' function_call_parameter_list ')' .
 
     $default  reduce using rule 341 (ctor_arguments)
 
 
-State 595
+state 595
 
   329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR $@59 object_property $@60 . dynamic_class_name_variable_properties
 
@@ -17587,7 +17587,7 @@
     dynamic_class_name_variable_properties  go to state 658
 
 
-State 596
+state 596
 
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 . inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';'
 
@@ -17596,7 +17596,7 @@
     inner_statement_list  go to state 659
 
 
-State 597
+state 597
 
    38 unticked_statement: T_IF '(' expr ')' $@5 statement . $@6 elseif_list else_single
 
@@ -17605,7 +17605,7 @@
     $@6  go to state 660
 
 
-State 598
+state 598
 
    47 unticked_statement: T_DO $@11 statement T_WHILE '(' $@12 . expr ')' ';'
 
@@ -17682,7 +17682,7 @@
     class_constant                     go to state 110
 
 
-State 599
+state 599
 
    44 unticked_statement: T_WHILE '(' $@9 expr ')' $@10 . while_statement
 
@@ -17782,14 +17782,14 @@
     class_constant                     go to state 110
 
 
-State 600
+state 600
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr . ';' $@14 for_expr ')' $@15 for_statement
 
     ';'  shift, and go to state 665
 
 
-State 601
+state 601
 
   213 non_empty_for_expr: non_empty_for_expr ',' $@38 expr .
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -17850,7 +17850,7 @@
     $default  reduce using rule 213 (non_empty_for_expr)
 
 
-State 602
+state 602
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS $@19 variable . foreach_optional_arg ')' $@20 foreach_statement
 
@@ -17861,7 +17861,7 @@
     foreach_optional_arg  go to state 667
 
 
-State 603
+state 603
 
   119 foreach_variable: '&' . variable
 
@@ -17886,7 +17886,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 604
+state 604
 
    69 unticked_statement: T_FOREACH '(' variable T_AS $@17 foreach_variable . foreach_optional_arg ')' $@18 foreach_statement
 
@@ -17897,28 +17897,28 @@
     foreach_optional_arg  go to state 669
 
 
-State 605
+state 605
 
   118 foreach_variable: variable .
 
     $default  reduce using rule 118 (foreach_variable)
 
 
-State 606
+state 606
 
   126 declare_list: T_STRING '=' static_scalar .
 
     $default  reduce using rule 126 (declare_list)
 
 
-State 607
+state 607
 
   127 declare_list: declare_list ',' T_STRING . '=' static_scalar
 
     '='  shift, and go to state 670
 
 
-State 608
+state 608
 
   125 declare_statement: ':' . inner_statement_list T_ENDDECLARE ';'
 
@@ -17927,21 +17927,21 @@
     inner_statement_list  go to state 671
 
 
-State 609
+state 609
 
   124 declare_statement: statement .
 
     $default  reduce using rule 124 (declare_statement)
 
 
-State 610
+state 610
 
    74 unticked_statement: T_DECLARE $@21 '(' declare_list ')' declare_statement .
 
     $default  reduce using rule 74 (unticked_statement)
 
 
-State 611
+state 611
 
   130 switch_case_list: ':' . case_list T_ENDSWITCH ';'
   131                 | ':' . ';' case_list T_ENDSWITCH ';'
@@ -17953,7 +17953,7 @@
     case_list  go to state 673
 
 
-State 612
+state 612
 
   128 switch_case_list: '{' . case_list '}'
   129                 | '{' . ';' case_list '}'
@@ -17965,14 +17965,14 @@
     case_list  go to state 675
 
 
-State 613
+state 613
 
    53 unticked_statement: T_SWITCH '(' expr ')' $@16 switch_case_list .
 
     $default  reduce using rule 53 (unticked_statement)
 
 
-State 614
+state 614
 
   377 non_empty_static_array_pair_list: static_scalar . T_DOUBLE_ARROW static_scalar
   378                                 | static_scalar .
@@ -17982,14 +17982,14 @@
     $default  reduce using rule 378 (non_empty_static_array_pair_list)
 
 
-State 615
+state 615
 
   360 static_scalar: T_ARRAY '(' static_array_pair_list . ')'
 
     ')'  shift, and go to state 677
 
 
-State 616
+state 616
 
   372 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
   375 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar
@@ -18002,7 +18002,7 @@
     possible_comma  go to state 679
 
 
-State 617
+state 617
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   320 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
@@ -18014,35 +18014,35 @@
     $default                reduce using rule 356 (static_scalar)
 
 
-State 618
+state 618
 
   362 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
 
     $default  reduce using rule 362 (static_class_constant)
 
 
-State 619
+state 619
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH . '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
     '('  shift, and go to state 680
 
 
-State 620
+state 620
 
   178 static_var_list: static_var_list ',' T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 178 (static_var_list)
 
 
-State 621
+state 621
 
   461 isset_variables: isset_variables ',' $@68 variable .
 
     $default  reduce using rule 461 (isset_variables)
 
 
-State 622
+state 622
 
   426 assignment_list_element: T_LIST '(' $@66 . assignment_list ')'
 
@@ -18072,14 +18072,14 @@
     assignment_list_element            go to state 460
 
 
-State 623
+state 623
 
   422 assignment_list: assignment_list ',' assignment_list_element .
 
     $default  reduce using rule 422 (assignment_list)
 
 
-State 624
+state 624
 
   216 expr_without_variable: T_LIST '(' $@39 assignment_list ')' '=' . expr
 
@@ -18156,21 +18156,21 @@
     class_constant                     go to state 110
 
 
-State 625
+state 625
 
   436 non_empty_array_pair_list: expr T_DOUBLE_ARROW '&' w_variable .
 
     $default  reduce using rule 436 (non_empty_array_pair_list)
 
 
-State 626
+state 626
 
   435 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .
 
     $default  reduce using rule 435 (non_empty_array_pair_list)
 
 
-State 627
+state 627
 
   430 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr
   434                          | non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_variable
@@ -18249,49 +18249,49 @@
     class_constant                     go to state 110
 
 
-State 628
+state 628
 
   444 encaps_var: T_VARIABLE '[' $@67 encaps_var_offset ']' .
 
     $default  reduce using rule 444 (encaps_var)
 
 
-State 629
+state 629
 
   447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'
 
     '}'  shift, and go to state 685
 
 
-State 630
+state 630
 
   305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' $@52 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 686
 
 
-State 631
+state 631
 
    13 top_statement: T_NAMESPACE namespace_name '{' $@2 top_statement_list '}' .
 
     $default  reduce using rule 13 (top_statement)
 
 
-State 632
+state 632
 
   307 function_call: T_NS_SEPARATOR namespace_name '(' $@53 function_call_parameter_list ')' .
 
     $default  reduce using rule 307 (function_call)
 
 
-State 633
+state 633
 
    32 inner_statement: T_HALT_COMPILER '(' ')' . ';'
 
     ';'  shift, and go to state 687
 
 
-State 634
+state 634
 
   171 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' . w_variable
 
@@ -18317,7 +18317,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 635
+state 635
 
   169 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' expr_without_variable .
   380 expr: expr_without_variable .
@@ -18327,7 +18327,7 @@
     $default  reduce using rule 380 (expr)
 
 
-State 636
+state 636
 
   170 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' variable .
   217 expr_without_variable: variable . '=' expr
@@ -18367,7 +18367,7 @@
     $default  reduce using rule 381 (r_variable)
 
 
-State 637
+state 637
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
   323 fully_qualified_class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
@@ -18377,7 +18377,7 @@
     $default  reduce using rule 323 (fully_qualified_class_name)
 
 
-State 638
+state 638
 
   113 implements_list: T_IMPLEMENTS interface_list .
   115 interface_list: interface_list . ',' fully_qualified_class_name
@@ -18387,7 +18387,7 @@
     $default  reduce using rule 113 (implements_list)
 
 
-State 639
+state 639
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from $@30 implements_list '{' . class_statement_list '}'
 
@@ -18396,7 +18396,7 @@
     class_statement_list  go to state 689
 
 
-State 640
+state 640
 
   115 interface_list: interface_list ',' . fully_qualified_class_name
 
@@ -18408,7 +18408,7 @@
     fully_qualified_class_name  go to state 690
 
 
-State 641
+state 641
 
   103 unticked_class_declaration_statement: interface_entry T_STRING $@31 interface_extends_list '{' class_statement_list . '}'
   181 class_statement_list: class_statement_list . class_statement
@@ -18433,14 +18433,14 @@
     class_constant_declaration  go to state 705
 
 
-State 642
+state 642
 
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 '(' parameter_list . ')' '{' inner_statement_list '}'
 
     ')'  shift, and go to state 706
 
 
-State 643
+state 643
 
   294 expr_without_variable: function is_reference '(' @50 parameter_list ')' . lexical_vars '{' inner_statement_list '}'
 
@@ -18451,7 +18451,7 @@
     lexical_vars  go to state 708
 
 
-State 644
+state 644
 
   157 non_empty_parameter_list: non_empty_parameter_list ',' . optional_class_type T_VARIABLE
   158                         | non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE
@@ -18470,7 +18470,7 @@
     fully_qualified_class_name  go to state 580
 
 
-State 645
+state 645
 
   154 non_empty_parameter_list: optional_class_type '&' . T_VARIABLE
   155                         | optional_class_type '&' . T_VARIABLE '=' static_scalar
@@ -18478,7 +18478,7 @@
     T_VARIABLE  shift, and go to state 710
 
 
-State 646
+state 646
 
   153 non_empty_parameter_list: optional_class_type T_VARIABLE .
   156                         | optional_class_type T_VARIABLE . '=' static_scalar
@@ -18488,21 +18488,21 @@
     $default  reduce using rule 153 (non_empty_parameter_list)
 
 
-State 647
+state 647
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@54 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 712
 
 
-State 648
+state 648
 
   311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@55 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 713
 
 
-State 649
+state 649
 
   275 expr_without_variable: expr '?' $@46 expr ':' $@47 . expr
 
@@ -18579,7 +18579,7 @@
     class_constant                     go to state 110
 
 
-State 650
+state 650
 
   220 expr_without_variable: variable '=' '&' T_NEW class_name_reference $@40 . ctor_arguments
 
@@ -18590,28 +18590,28 @@
     ctor_arguments  go to state 715
 
 
-State 651
+state 651
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@56 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 716
 
 
-State 652
+state 652
 
   315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@57 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 717
 
 
-State 653
+state 653
 
   419 variable_name: '{' expr '}' .
 
     $default  reduce using rule 419 (variable_name)
 
 
-State 654
+state 654
 
   393 method_or_not: '(' . $@64 function_call_parameter_list ')'
 
@@ -18620,7 +18620,7 @@
     $@64  go to state 718
 
 
-State 655
+state 655
 
   386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR $@61 object_property $@62 method_or_not . variable_properties
 
@@ -18629,14 +18629,14 @@
     variable_properties  go to state 719
 
 
-State 656
+state 656
 
   415 object_dim_list: object_dim_list '[' dim_offset . ']'
 
     ']'  shift, and go to state 720
 
 
-State 657
+state 657
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -18696,7 +18696,7 @@
     '}'                    shift, and go to state 721
 
 
-State 658
+state 658
 
   329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR $@59 object_property $@60 dynamic_class_name_variable_properties .
   331 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property
@@ -18708,7 +18708,7 @@
     dynamic_class_name_variable_property  go to state 723
 
 
-State 659
+state 659
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 inner_statement_list . $@8 new_elseif_list new_else_single T_ENDIF ';'
@@ -18722,7 +18722,7 @@
     $@8  go to state 724
 
 
-State 660
+state 660
 
    38 unticked_statement: T_IF '(' expr ')' $@5 statement $@6 . elseif_list else_single
 
@@ -18731,7 +18731,7 @@
     elseif_list  go to state 725
 
 
-State 661
+state 661
 
    47 unticked_statement: T_DO $@11 statement T_WHILE '(' $@12 expr . ')' ';'
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -18791,7 +18791,7 @@
     ')'                    shift, and go to state 726
 
 
-State 662
+state 662
 
   140 while_statement: ':' . inner_statement_list T_ENDWHILE ';'
 
@@ -18800,21 +18800,21 @@
     inner_statement_list  go to state 727
 
 
-State 663
+state 663
 
   139 while_statement: statement .
 
     $default  reduce using rule 139 (while_statement)
 
 
-State 664
+state 664
 
    44 unticked_statement: T_WHILE '(' $@9 expr ')' $@10 while_statement .
 
     $default  reduce using rule 44 (unticked_statement)
 
 
-State 665
+state 665
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr ';' . $@14 for_expr ')' $@15 for_statement
 
@@ -18823,7 +18823,7 @@
     $@14  go to state 728
 
 
-State 666
+state 666
 
   117 foreach_optional_arg: T_DOUBLE_ARROW . foreach_variable
 
@@ -18850,28 +18850,28 @@
     simple_indirect_reference          go to state 108
 
 
-State 667
+state 667
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS $@19 variable foreach_optional_arg . ')' $@20 foreach_statement
 
     ')'  shift, and go to state 730
 
 
-State 668
+state 668
 
   119 foreach_variable: '&' variable .
 
     $default  reduce using rule 119 (foreach_variable)
 
 
-State 669
+state 669
 
    69 unticked_statement: T_FOREACH '(' variable T_AS $@17 foreach_variable foreach_optional_arg . ')' $@18 foreach_statement
 
     ')'  shift, and go to state 731
 
 
-State 670
+state 670
 
   127 declare_list: declare_list ',' T_STRING '=' . static_scalar
 
@@ -18901,7 +18901,7 @@
     static_class_constant  go to state 442
 
 
-State 671
+state 671
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   125 declare_statement: ':' inner_statement_list . T_ENDDECLARE ';'
@@ -18913,7 +18913,7 @@
     $@4  go to state 347
 
 
-State 672
+state 672
 
   131 switch_case_list: ':' ';' . case_list T_ENDSWITCH ';'
 
@@ -18922,7 +18922,7 @@
     case_list  go to state 734
 
 
-State 673
+state 673
 
   130 switch_case_list: ':' case_list . T_ENDSWITCH ';'
   134 case_list: case_list . T_CASE expr case_separator $@32 inner_statement_list
@@ -18933,7 +18933,7 @@
     T_DEFAULT    shift, and go to state 737
 
 
-State 674
+state 674
 
   129 switch_case_list: '{' ';' . case_list '}'
 
@@ -18942,7 +18942,7 @@
     case_list  go to state 738
 
 
-State 675
+state 675
 
   128 switch_case_list: '{' case_list . '}'
   134 case_list: case_list . T_CASE expr case_separator $@32 inner_statement_list
@@ -18953,7 +18953,7 @@
     '}'        shift, and go to state 739
 
 
-State 676
+state 676
 
   377 non_empty_static_array_pair_list: static_scalar T_DOUBLE_ARROW . static_scalar
 
@@ -18983,14 +18983,14 @@
     static_class_constant  go to state 442
 
 
-State 677
+state 677
 
   360 static_scalar: T_ARRAY '(' static_array_pair_list ')' .
 
     $default  reduce using rule 360 (static_scalar)
 
 
-State 678
+state 678
 
   374 possible_comma: ',' .
   375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar
@@ -19024,14 +19024,14 @@
     static_class_constant  go to state 442
 
 
-State 679
+state 679
 
   372 static_array_pair_list: non_empty_static_array_pair_list possible_comma .
 
     $default  reduce using rule 372 (static_array_pair_list)
 
 
-State 680
+state 680
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' . $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
@@ -19040,7 +19040,7 @@
     $@23  go to state 742
 
 
-State 681
+state 681
 
   422 assignment_list: assignment_list . ',' assignment_list_element
   426 assignment_list_element: T_LIST '(' $@66 assignment_list . ')'
@@ -19049,7 +19049,7 @@
     ')'  shift, and go to state 743
 
 
-State 682
+state 682
 
   216 expr_without_variable: T_LIST '(' $@39 assignment_list ')' '=' expr .
   240                      | expr . T_BOOLEAN_OR $@42 expr
@@ -19107,7 +19107,7 @@
     $default  reduce using rule 216 (expr_without_variable)
 
 
-State 683
+state 683
 
   434 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_variable
 
@@ -19133,7 +19133,7 @@
     simple_indirect_reference          go to state 108
 
 
-State 684
+state 684
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -19194,35 +19194,35 @@
     $default  reduce using rule 430 (non_empty_array_pair_list)
 
 
-State 685
+state 685
 
   447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .
 
     $default  reduce using rule 447 (encaps_var)
 
 
-State 686
+state 686
 
   305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' $@52 function_call_parameter_list ')' .
 
     $default  reduce using rule 305 (function_call)
 
 
-State 687
+state 687
 
    32 inner_statement: T_HALT_COMPILER '(' ')' ';' .
 
     $default  reduce using rule 32 (inner_statement)
 
 
-State 688
+state 688
 
   171 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' w_variable .
 
     $default  reduce using rule 171 (non_empty_function_call_parameter_list)
 
 
-State 689
+state 689
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from $@30 implements_list '{' class_statement_list . '}'
   181 class_statement_list: class_statement_list . class_statement
@@ -19247,84 +19247,84 @@
     class_constant_declaration  go to state 705
 
 
-State 690
+state 690
 
   115 interface_list: interface_list ',' fully_qualified_class_name .
 
     $default  reduce using rule 115 (interface_list)
 
 
-State 691
+state 691
 
   207 class_constant_declaration: T_CONST . T_STRING '=' static_scalar
 
     T_STRING  shift, and go to state 746
 
 
-State 692
+state 692
 
   196 member_modifier: T_PUBLIC .
 
     $default  reduce using rule 196 (member_modifier)
 
 
-State 693
+state 693
 
   197 member_modifier: T_PROTECTED .
 
     $default  reduce using rule 197 (member_modifier)
 
 
-State 694
+state 694
 
   198 member_modifier: T_PRIVATE .
 
     $default  reduce using rule 198 (member_modifier)
 
 
-State 695
+state 695
 
   201 member_modifier: T_FINAL .
 
     $default  reduce using rule 201 (member_modifier)
 
 
-State 696
+state 696
 
   200 member_modifier: T_ABSTRACT .
 
     $default  reduce using rule 200 (member_modifier)
 
 
-State 697
+state 697
 
   199 member_modifier: T_STATIC .
 
     $default  reduce using rule 199 (member_modifier)
 
 
-State 698
+state 698
 
   191 variable_modifiers: T_VAR .
 
     $default  reduce using rule 191 (variable_modifiers)
 
 
-State 699
+state 699
 
   103 unticked_class_declaration_statement: interface_entry T_STRING $@31 interface_extends_list '{' class_statement_list '}' .
 
     $default  reduce using rule 103 (unticked_class_declaration_statement)
 
 
-State 700
+state 700
 
   181 class_statement_list: class_statement_list class_statement .
 
     $default  reduce using rule 181 (class_statement_list)
 
 
-State 701
+state 701
 
   184 class_statement: variable_modifiers . $@36 class_variable_declaration ';'
 
@@ -19333,7 +19333,7 @@
     $@36  go to state 747
 
 
-State 702
+state 702
 
   187 class_statement: method_modifiers . function is_reference T_STRING $@37 '(' parameter_list ')' method_body
 
@@ -19342,7 +19342,7 @@
     function  go to state 748
 
 
-State 703
+state 703
 
   190 variable_modifiers: non_empty_member_modifiers .
   193 method_modifiers: non_empty_member_modifiers .
@@ -19361,14 +19361,14 @@
     member_modifier  go to state 749
 
 
-State 704
+state 704
 
   194 non_empty_member_modifiers: member_modifier .
 
     $default  reduce using rule 194 (non_empty_member_modifiers)
 
 
-State 705
+state 705
 
   185 class_statement: class_constant_declaration . ';'
   206 class_constant_declaration: class_constant_declaration . ',' T_STRING '=' static_scalar
@@ -19377,28 +19377,28 @@
     ';'  shift, and go to state 751
 
 
-State 706
+state 706
 
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 '(' parameter_list ')' . '{' inner_statement_list '}'
 
     '{'  shift, and go to state 752
 
 
-State 707
+state 707
 
   297 lexical_vars: T_USE . '(' lexical_var_list ')'
 
     '('  shift, and go to state 753
 
 
-State 708
+state 708
 
   294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars . '{' inner_statement_list '}'
 
     '{'  shift, and go to state 754
 
 
-State 709
+state 709
 
   157 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type . T_VARIABLE
   158                         | non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE
@@ -19409,7 +19409,7 @@
     T_VARIABLE  shift, and go to state 756
 
 
-State 710
+state 710
 
   154 non_empty_parameter_list: optional_class_type '&' T_VARIABLE .
   155                         | optional_class_type '&' T_VARIABLE . '=' static_scalar
@@ -19419,7 +19419,7 @@
     $default  reduce using rule 154 (non_empty_parameter_list)
 
 
-State 711
+state 711
 
   156 non_empty_parameter_list: optional_class_type T_VARIABLE '=' . static_scalar
 
@@ -19449,21 +19449,21 @@
     static_class_constant  go to state 442
 
 
-State 712
+state 712
 
   309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@54 function_call_parameter_list ')' .
 
     $default  reduce using rule 309 (function_call)
 
 
-State 713
+state 713
 
   311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@55 function_call_parameter_list ')' .
 
     $default  reduce using rule 311 (function_call)
 
 
-State 714
+state 714
 
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
   242                      | expr . T_BOOLEAN_AND $@43 expr
@@ -19520,28 +19520,28 @@
     $default  reduce using rule 275 (expr_without_variable)
 
 
-State 715
+state 715
 
   220 expr_without_variable: variable '=' '&' T_NEW class_name_reference $@40 ctor_arguments .
 
     $default  reduce using rule 220 (expr_without_variable)
 
 
-State 716
+state 716
 
   313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' $@56 function_call_parameter_list ')' .
 
     $default  reduce using rule 313 (function_call)
 
 
-State 717
+state 717
 
   315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' $@57 function_call_parameter_list ')' .
 
     $default  reduce using rule 315 (function_call)
 
 
-State 718
+state 718
 
   393 method_or_not: '(' $@64 . function_call_parameter_list ')'
 
@@ -19623,7 +19623,7 @@
     class_constant                          go to state 110
 
 
-State 719
+state 719
 
   386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR $@61 object_property $@62 method_or_not variable_properties .
   388 variable_properties: variable_properties . variable_property
@@ -19635,21 +19635,21 @@
     variable_property  go to state 761
 
 
-State 720
+state 720
 
   415 object_dim_list: object_dim_list '[' dim_offset ']' .
 
     $default  reduce using rule 415 (object_dim_list)
 
 
-State 721
+state 721
 
   416 object_dim_list: object_dim_list '{' expr '}' .
 
     $default  reduce using rule 416 (object_dim_list)
 
 
-State 722
+state 722
 
   333 dynamic_class_name_variable_property: T_OBJECT_OPERATOR . object_property
 
@@ -19667,14 +19667,14 @@
     simple_indirect_reference  go to state 362
 
 
-State 723
+state 723
 
   331 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .
 
     $default  reduce using rule 331 (dynamic_class_name_variable_properties)
 
 
-State 724
+state 724
 
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 inner_statement_list $@8 . new_elseif_list new_else_single T_ENDIF ';'
 
@@ -19683,7 +19683,7 @@
     new_elseif_list  go to state 763
 
 
-State 725
+state 725
 
    38 unticked_statement: T_IF '(' expr ')' $@5 statement $@6 elseif_list . else_single
   143 elseif_list: elseif_list . T_ELSEIF '(' expr ')' $@34 statement
@@ -19698,14 +19698,14 @@
     else_single  go to state 766
 
 
-State 726
+state 726
 
    47 unticked_statement: T_DO $@11 statement T_WHILE '(' $@12 expr ')' . ';'
 
     ';'  shift, and go to state 767
 
 
-State 727
+state 727
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   140 while_statement: ':' inner_statement_list . T_ENDWHILE ';'
@@ -19717,7 +19717,7 @@
     $@4  go to state 347
 
 
-State 728
+state 728
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr ';' $@14 . for_expr ')' $@15 for_statement
 
@@ -19798,14 +19798,14 @@
     class_constant                     go to state 110
 
 
-State 729
+state 729
 
   117 foreach_optional_arg: T_DOUBLE_ARROW foreach_variable .
 
     $default  reduce using rule 117 (foreach_optional_arg)
 
 
-State 730
+state 730
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS $@19 variable foreach_optional_arg ')' . $@20 foreach_statement
 
@@ -19814,7 +19814,7 @@
     $@20  go to state 770
 
 
-State 731
+state 731
 
    69 unticked_statement: T_FOREACH '(' variable T_AS $@17 foreach_variable foreach_optional_arg ')' . $@18 foreach_statement
 
@@ -19823,21 +19823,21 @@
     $@18  go to state 771
 
 
-State 732
+state 732
 
   127 declare_list: declare_list ',' T_STRING '=' static_scalar .
 
     $default  reduce using rule 127 (declare_list)
 
 
-State 733
+state 733
 
   125 declare_statement: ':' inner_statement_list T_ENDDECLARE . ';'
 
     ';'  shift, and go to state 772
 
 
-State 734
+state 734
 
   131 switch_case_list: ':' ';' case_list . T_ENDSWITCH ';'
   134 case_list: case_list . T_CASE expr case_separator $@32 inner_statement_list
@@ -19848,14 +19848,14 @@
     T_DEFAULT    shift, and go to state 737
 
 
-State 735
+state 735
 
   130 switch_case_list: ':' case_list T_ENDSWITCH . ';'
 
     ';'  shift, and go to state 774
 
 
-State 736
+state 736
 
   134 case_list: case_list T_CASE . expr case_separator $@32 inner_statement_list
 
@@ -19932,7 +19932,7 @@
     class_constant                     go to state 110
 
 
-State 737
+state 737
 
   136 case_list: case_list T_DEFAULT . case_separator $@33 inner_statement_list
 
@@ -19942,7 +19942,7 @@
     case_separator  go to state 778
 
 
-State 738
+state 738
 
   129 switch_case_list: '{' ';' case_list . '}'
   134 case_list: case_list . T_CASE expr case_separator $@32 inner_statement_list
@@ -19953,21 +19953,21 @@
     '}'        shift, and go to state 779
 
 
-State 739
+state 739
 
   128 switch_case_list: '{' case_list '}' .
 
     $default  reduce using rule 128 (switch_case_list)
 
 
-State 740
+state 740
 
   377 non_empty_static_array_pair_list: static_scalar T_DOUBLE_ARROW static_scalar .
 
     $default  reduce using rule 377 (non_empty_static_array_pair_list)
 
 
-State 741
+state 741
 
   375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar
   376                                 | non_empty_static_array_pair_list ',' static_scalar .
@@ -19977,7 +19977,7 @@
     $default  reduce using rule 376 (non_empty_static_array_pair_list)
 
 
-State 742
+state 742
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 . fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
@@ -19989,35 +19989,35 @@
     fully_qualified_class_name  go to state 781
 
 
-State 743
+state 743
 
   426 assignment_list_element: T_LIST '(' $@66 assignment_list ')' .
 
     $default  reduce using rule 426 (assignment_list_element)
 
 
-State 744
+state 744
 
   434 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable .
 
     $default  reduce using rule 434 (non_empty_array_pair_list)
 
 
-State 745
+state 745
 
   101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from $@30 implements_list '{' class_statement_list '}' .
 
     $default  reduce using rule 101 (unticked_class_declaration_statement)
 
 
-State 746
+state 746
 
   207 class_constant_declaration: T_CONST T_STRING . '=' static_scalar
 
     '='  shift, and go to state 782
 
 
-State 747
+state 747
 
   184 class_statement: variable_modifiers $@36 . class_variable_declaration ';'
 
@@ -20026,7 +20026,7 @@
     class_variable_declaration  go to state 784
 
 
-State 748
+state 748
 
   187 class_statement: method_modifiers function . is_reference T_STRING $@37 '(' parameter_list ')' method_body
 
@@ -20037,28 +20037,28 @@
     is_reference  go to state 785
 
 
-State 749
+state 749
 
   195 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .
 
     $default  reduce using rule 195 (non_empty_member_modifiers)
 
 
-State 750
+state 750
 
   206 class_constant_declaration: class_constant_declaration ',' . T_STRING '=' static_scalar
 
     T_STRING  shift, and go to state 786
 
 
-State 751
+state 751
 
   185 class_statement: class_constant_declaration ';' .
 
     $default  reduce using rule 185 (class_statement)
 
 
-State 752
+state 752
 
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 '(' parameter_list ')' '{' . inner_statement_list '}'
 
@@ -20067,7 +20067,7 @@
     inner_statement_list  go to state 787
 
 
-State 753
+state 753
 
   297 lexical_vars: T_USE '(' . lexical_var_list ')'
 
@@ -20077,7 +20077,7 @@
     lexical_var_list  go to state 790
 
 
-State 754
+state 754
 
   294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' . inner_statement_list '}'
 
@@ -20086,7 +20086,7 @@
     inner_statement_list  go to state 791
 
 
-State 755
+state 755
 
   158 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE
   159                         | non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE '=' static_scalar
@@ -20094,7 +20094,7 @@
     T_VARIABLE  shift, and go to state 792
 
 
-State 756
+state 756
 
   157 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE .
   160                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE . '=' static_scalar
@@ -20104,7 +20104,7 @@
     $default  reduce using rule 157 (non_empty_parameter_list)
 
 
-State 757
+state 757
 
   155 non_empty_parameter_list: optional_class_type '&' T_VARIABLE '=' . static_scalar
 
@@ -20134,21 +20134,21 @@
     static_class_constant  go to state 442
 
 
-State 758
+state 758
 
   156 non_empty_parameter_list: optional_class_type T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 156 (non_empty_parameter_list)
 
 
-State 759
+state 759
 
   393 method_or_not: '(' $@64 function_call_parameter_list . ')'
 
     ')'  shift, and go to state 795
 
 
-State 760
+state 760
 
   391 variable_property: T_OBJECT_OPERATOR . object_property $@63 method_or_not
 
@@ -20166,21 +20166,21 @@
     simple_indirect_reference  go to state 362
 
 
-State 761
+state 761
 
   388 variable_properties: variable_properties variable_property .
 
     $default  reduce using rule 388 (variable_properties)
 
 
-State 762
+state 762
 
   333 dynamic_class_name_variable_property: T_OBJECT_OPERATOR object_property .
 
     $default  reduce using rule 333 (dynamic_class_name_variable_property)
 
 
-State 763
+state 763
 
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list . new_else_single T_ENDIF ';'
   146 new_elseif_list: new_elseif_list . T_ELSEIF '(' expr ')' ':' $@35 inner_statement_list
@@ -20193,14 +20193,14 @@
     new_else_single  go to state 799
 
 
-State 764
+state 764
 
   143 elseif_list: elseif_list T_ELSEIF . '(' expr ')' $@34 statement
 
     '('  shift, and go to state 800
 
 
-State 765
+state 765
 
   148 else_single: T_ELSE . statement
 
@@ -20298,35 +20298,35 @@
     class_constant                     go to state 110
 
 
-State 766
+state 766
 
    38 unticked_statement: T_IF '(' expr ')' $@5 statement $@6 elseif_list else_single .
 
     $default  reduce using rule 38 (unticked_statement)
 
 
-State 767
+state 767
 
    47 unticked_statement: T_DO $@11 statement T_WHILE '(' $@12 expr ')' ';' .
 
     $default  reduce using rule 47 (unticked_statement)
 
 
-State 768
+state 768
 
   140 while_statement: ':' inner_statement_list T_ENDWHILE . ';'
 
     ';'  shift, and go to state 802
 
 
-State 769
+state 769
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr ';' $@14 for_expr . ')' $@15 for_statement
 
     ')'  shift, and go to state 803
 
 
-State 770
+state 770
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS $@19 variable foreach_optional_arg ')' $@20 . foreach_statement
 
@@ -20426,7 +20426,7 @@
     class_constant                     go to state 110
 
 
-State 771
+state 771
 
    69 unticked_statement: T_FOREACH '(' variable T_AS $@17 foreach_variable foreach_optional_arg ')' $@18 . foreach_statement
 
@@ -20526,28 +20526,28 @@
     class_constant                     go to state 110
 
 
-State 772
+state 772
 
   125 declare_statement: ':' inner_statement_list T_ENDDECLARE ';' .
 
     $default  reduce using rule 125 (declare_statement)
 
 
-State 773
+state 773
 
   131 switch_case_list: ':' ';' case_list T_ENDSWITCH . ';'
 
     ';'  shift, and go to state 808
 
 
-State 774
+state 774
 
   130 switch_case_list: ':' case_list T_ENDSWITCH ';' .
 
     $default  reduce using rule 130 (switch_case_list)
 
 
-State 775
+state 775
 
   134 case_list: case_list T_CASE expr . case_separator $@32 inner_statement_list
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -20610,21 +20610,21 @@
     case_separator  go to state 809
 
 
-State 776
+state 776
 
   137 case_separator: ':' .
 
     $default  reduce using rule 137 (case_separator)
 
 
-State 777
+state 777
 
   138 case_separator: ';' .
 
     $default  reduce using rule 138 (case_separator)
 
 
-State 778
+state 778
 
   136 case_list: case_list T_DEFAULT case_separator . $@33 inner_statement_list
 
@@ -20633,14 +20633,14 @@
     $@33  go to state 810
 
 
-State 779
+state 779
 
   129 switch_case_list: '{' ';' case_list '}' .
 
     $default  reduce using rule 129 (switch_case_list)
 
 
-State 780
+state 780
 
   375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar
 
@@ -20670,7 +20670,7 @@
     static_class_constant  go to state 442
 
 
-State 781
+state 781
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name . $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
@@ -20679,7 +20679,7 @@
     $@24  go to state 812
 
 
-State 782
+state 782
 
   207 class_constant_declaration: T_CONST T_STRING '=' . static_scalar
 
@@ -20709,7 +20709,7 @@
     static_class_constant  go to state 442
 
 
-State 783
+state 783
 
   204 class_variable_declaration: T_VARIABLE .
   205                           | T_VARIABLE . '=' static_scalar
@@ -20719,7 +20719,7 @@
     $default  reduce using rule 204 (class_variable_declaration)
 
 
-State 784
+state 784
 
   184 class_statement: variable_modifiers $@36 class_variable_declaration . ';'
   202 class_variable_declaration: class_variable_declaration . ',' T_VARIABLE
@@ -20729,21 +20729,21 @@
     ';'  shift, and go to state 816
 
 
-State 785
+state 785
 
   187 class_statement: method_modifiers function is_reference . T_STRING $@37 '(' parameter_list ')' method_body
 
     T_STRING  shift, and go to state 817
 
 
-State 786
+state 786
 
   206 class_constant_declaration: class_constant_declaration ',' T_STRING . '=' static_scalar
 
     '='  shift, and go to state 818
 
 
-State 787
+state 787
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 '(' parameter_list ')' '{' inner_statement_list . '}'
@@ -20755,21 +20755,21 @@
     $@4  go to state 347
 
 
-State 788
+state 788
 
   301 lexical_var_list: '&' . T_VARIABLE
 
     T_VARIABLE  shift, and go to state 820
 
 
-State 789
+state 789
 
   300 lexical_var_list: T_VARIABLE .
 
     $default  reduce using rule 300 (lexical_var_list)
 
 
-State 790
+state 790
 
   297 lexical_vars: T_USE '(' lexical_var_list . ')'
   298 lexical_var_list: lexical_var_list . ',' T_VARIABLE
@@ -20779,7 +20779,7 @@
     ')'  shift, and go to state 822
 
 
-State 791
+state 791
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list . '}'
@@ -20791,7 +20791,7 @@
     $@4  go to state 347
 
 
-State 792
+state 792
 
   158 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE .
   159                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE . '=' static_scalar
@@ -20801,7 +20801,7 @@
     $default  reduce using rule 158 (non_empty_parameter_list)
 
 
-State 793
+state 793
 
   160 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' . static_scalar
 
@@ -20831,21 +20831,21 @@
     static_class_constant  go to state 442
 
 
-State 794
+state 794
 
   155 non_empty_parameter_list: optional_class_type '&' T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 155 (non_empty_parameter_list)
 
 
-State 795
+state 795
 
   393 method_or_not: '(' $@64 function_call_parameter_list ')' .
 
     $default  reduce using rule 393 (method_or_not)
 
 
-State 796
+state 796
 
   391 variable_property: T_OBJECT_OPERATOR object_property . $@63 method_or_not
 
@@ -20854,28 +20854,28 @@
     $@63  go to state 826
 
 
-State 797
+state 797
 
   146 new_elseif_list: new_elseif_list T_ELSEIF . '(' expr ')' ':' $@35 inner_statement_list
 
     '('  shift, and go to state 827
 
 
-State 798
+state 798
 
   150 new_else_single: T_ELSE . ':' inner_statement_list
 
     ':'  shift, and go to state 828
 
 
-State 799
+state 799
 
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single . T_ENDIF ';'
 
     T_ENDIF  shift, and go to state 829
 
 
-State 800
+state 800
 
   143 elseif_list: elseif_list T_ELSEIF '(' . expr ')' $@34 statement
 
@@ -20952,21 +20952,21 @@
     class_constant                     go to state 110
 
 
-State 801
+state 801
 
   148 else_single: T_ELSE statement .
 
     $default  reduce using rule 148 (else_single)
 
 
-State 802
+state 802
 
   140 while_statement: ':' inner_statement_list T_ENDWHILE ';' .
 
     $default  reduce using rule 140 (while_statement)
 
 
-State 803
+state 803
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' . $@15 for_statement
 
@@ -20975,7 +20975,7 @@
     $@15  go to state 831
 
 
-State 804
+state 804
 
   123 foreach_statement: ':' . inner_statement_list T_ENDFOREACH ';'
 
@@ -20984,35 +20984,35 @@
     inner_statement_list  go to state 832
 
 
-State 805
+state 805
 
   122 foreach_statement: statement .
 
     $default  reduce using rule 122 (foreach_statement)
 
 
-State 806
+state 806
 
    72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS $@19 variable foreach_optional_arg ')' $@20 foreach_statement .
 
     $default  reduce using rule 72 (unticked_statement)
 
 
-State 807
+state 807
 
    69 unticked_statement: T_FOREACH '(' variable T_AS $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement .
 
     $default  reduce using rule 69 (unticked_statement)
 
 
-State 808
+state 808
 
   131 switch_case_list: ':' ';' case_list T_ENDSWITCH ';' .
 
     $default  reduce using rule 131 (switch_case_list)
 
 
-State 809
+state 809
 
   134 case_list: case_list T_CASE expr case_separator . $@32 inner_statement_list
 
@@ -21021,7 +21021,7 @@
     $@32  go to state 833
 
 
-State 810
+state 810
 
   136 case_list: case_list T_DEFAULT case_separator $@33 . inner_statement_list
 
@@ -21030,28 +21030,28 @@
     inner_statement_list  go to state 834
 
 
-State 811
+state 811
 
   375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .
 
     $default  reduce using rule 375 (non_empty_static_array_pair_list)
 
 
-State 812
+state 812
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 . T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
     T_VARIABLE  shift, and go to state 835
 
 
-State 813
+state 813
 
   207 class_constant_declaration: T_CONST T_STRING '=' static_scalar .
 
     $default  reduce using rule 207 (class_constant_declaration)
 
 
-State 814
+state 814
 
   205 class_variable_declaration: T_VARIABLE '=' . static_scalar
 
@@ -21081,7 +21081,7 @@
     static_class_constant  go to state 442
 
 
-State 815
+state 815
 
   202 class_variable_declaration: class_variable_declaration ',' . T_VARIABLE
   203                           | class_variable_declaration ',' . T_VARIABLE '=' static_scalar
@@ -21089,14 +21089,14 @@
     T_VARIABLE  shift, and go to state 837
 
 
-State 816
+state 816
 
   184 class_statement: variable_modifiers $@36 class_variable_declaration ';' .
 
     $default  reduce using rule 184 (class_statement)
 
 
-State 817
+state 817
 
   187 class_statement: method_modifiers function is_reference T_STRING . $@37 '(' parameter_list ')' method_body
 
@@ -21105,7 +21105,7 @@
     $@37  go to state 838
 
 
-State 818
+state 818
 
   206 class_constant_declaration: class_constant_declaration ',' T_STRING '=' . static_scalar
 
@@ -21135,21 +21135,21 @@
     static_class_constant  go to state 442
 
 
-State 819
+state 819
 
    99 unticked_function_declaration_statement: function is_reference T_STRING $@29 '(' parameter_list ')' '{' inner_statement_list '}' .
 
     $default  reduce using rule 99 (unticked_function_declaration_statement)
 
 
-State 820
+state 820
 
   301 lexical_var_list: '&' T_VARIABLE .
 
     $default  reduce using rule 301 (lexical_var_list)
 
 
-State 821
+state 821
 
   298 lexical_var_list: lexical_var_list ',' . T_VARIABLE
   299                 | lexical_var_list ',' . '&' T_VARIABLE
@@ -21158,21 +21158,21 @@
     T_VARIABLE  shift, and go to state 841
 
 
-State 822
+state 822
 
   297 lexical_vars: T_USE '(' lexical_var_list ')' .
 
     $default  reduce using rule 297 (lexical_vars)
 
 
-State 823
+state 823
 
   294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}' .
 
     $default  reduce using rule 294 (expr_without_variable)
 
 
-State 824
+state 824
 
   159 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' . static_scalar
 
@@ -21202,14 +21202,14 @@
     static_class_constant  go to state 442
 
 
-State 825
+state 825
 
   160 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 160 (non_empty_parameter_list)
 
 
-State 826
+state 826
 
   391 variable_property: T_OBJECT_OPERATOR object_property $@63 . method_or_not
 
@@ -21220,7 +21220,7 @@
     method_or_not  go to state 843
 
 
-State 827
+state 827
 
   146 new_elseif_list: new_elseif_list T_ELSEIF '(' . expr ')' ':' $@35 inner_statement_list
 
@@ -21297,7 +21297,7 @@
     class_constant                     go to state 110
 
 
-State 828
+state 828
 
   150 new_else_single: T_ELSE ':' . inner_statement_list
 
@@ -21306,14 +21306,14 @@
     inner_statement_list  go to state 845
 
 
-State 829
+state 829
 
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF . ';'
 
     ';'  shift, and go to state 846
 
 
-State 830
+state 830
 
   143 elseif_list: elseif_list T_ELSEIF '(' expr . ')' $@34 statement
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -21373,7 +21373,7 @@
     ')'                    shift, and go to state 847
 
 
-State 831
+state 831
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 . for_statement
 
@@ -21473,7 +21473,7 @@
     class_constant                     go to state 110
 
 
-State 832
+state 832
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   123 foreach_statement: ':' inner_statement_list . T_ENDFOREACH ';'
@@ -21485,7 +21485,7 @@
     $@4  go to state 347
 
 
-State 833
+state 833
 
   134 case_list: case_list T_CASE expr case_separator $@32 . inner_statement_list
 
@@ -21494,7 +21494,7 @@
     inner_statement_list  go to state 852
 
 
-State 834
+state 834
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   136 case_list: case_list T_DEFAULT case_separator $@33 inner_statement_list .
@@ -21508,21 +21508,21 @@
     $@4  go to state 347
 
 
-State 835
+state 835
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE . ')' $@25 '{' inner_statement_list '}' $@26 additional_catches
 
     ')'  shift, and go to state 853
 
 
-State 836
+state 836
 
   205 class_variable_declaration: T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 205 (class_variable_declaration)
 
 
-State 837
+state 837
 
   202 class_variable_declaration: class_variable_declaration ',' T_VARIABLE .
   203                           | class_variable_declaration ',' T_VARIABLE . '=' static_scalar
@@ -21532,49 +21532,49 @@
     $default  reduce using rule 202 (class_variable_declaration)
 
 
-State 838
+state 838
 
   187 class_statement: method_modifiers function is_reference T_STRING $@37 . '(' parameter_list ')' method_body
 
     '('  shift, and go to state 855
 
 
-State 839
+state 839
 
   206 class_constant_declaration: class_constant_declaration ',' T_STRING '=' static_scalar .
 
     $default  reduce using rule 206 (class_constant_declaration)
 
 
-State 840
+state 840
 
   299 lexical_var_list: lexical_var_list ',' '&' . T_VARIABLE
 
     T_VARIABLE  shift, and go to state 856
 
 
-State 841
+state 841
 
   298 lexical_var_list: lexical_var_list ',' T_VARIABLE .
 
     $default  reduce using rule 298 (lexical_var_list)
 
 
-State 842
+state 842
 
   159 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 159 (non_empty_parameter_list)
 
 
-State 843
+state 843
 
   391 variable_property: T_OBJECT_OPERATOR object_property $@63 method_or_not .
 
     $default  reduce using rule 391 (variable_property)
 
 
-State 844
+state 844
 
   146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr . ')' ':' $@35 inner_statement_list
   240 expr_without_variable: expr . T_BOOLEAN_OR $@42 expr
@@ -21634,7 +21634,7 @@
     ')'                    shift, and go to state 857
 
 
-State 845
+state 845
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   150 new_else_single: T_ELSE ':' inner_statement_list .
@@ -21645,14 +21645,14 @@
     $@4  go to state 347
 
 
-State 846
+state 846
 
    41 unticked_statement: T_IF '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single T_ENDIF ';' .
 
     $default  reduce using rule 41 (unticked_statement)
 
 
-State 847
+state 847
 
   143 elseif_list: elseif_list T_ELSEIF '(' expr ')' . $@34 statement
 
@@ -21661,7 +21661,7 @@
     $@34  go to state 858
 
 
-State 848
+state 848
 
   121 for_statement: ':' . inner_statement_list T_ENDFOR ';'
 
@@ -21670,28 +21670,28 @@
     inner_statement_list  go to state 859
 
 
-State 849
+state 849
 
   120 for_statement: statement .
 
     $default  reduce using rule 120 (for_statement)
 
 
-State 850
+state 850
 
    51 unticked_statement: T_FOR '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement .
 
     $default  reduce using rule 51 (unticked_statement)
 
 
-State 851
+state 851
 
   123 foreach_statement: ':' inner_statement_list T_ENDFOREACH . ';'
 
     ';'  shift, and go to state 860
 
 
-State 852
+state 852
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   134 case_list: case_list T_CASE expr case_separator $@32 inner_statement_list .
@@ -21705,7 +21705,7 @@
     $@4  go to state 347
 
 
-State 853
+state 853
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' . $@25 '{' inner_statement_list '}' $@26 additional_catches
 
@@ -21714,7 +21714,7 @@
     $@25  go to state 861
 
 
-State 854
+state 854
 
   203 class_variable_declaration: class_variable_declaration ',' T_VARIABLE '=' . static_scalar
 
@@ -21744,7 +21744,7 @@
     static_class_constant  go to state 442
 
 
-State 855
+state 855
 
   187 class_statement: method_modifiers function is_reference T_STRING $@37 '(' . parameter_list ')' method_body
 
@@ -21763,21 +21763,21 @@
     fully_qualified_class_name  go to state 580
 
 
-State 856
+state 856
 
   299 lexical_var_list: lexical_var_list ',' '&' T_VARIABLE .
 
     $default  reduce using rule 299 (lexical_var_list)
 
 
-State 857
+state 857
 
   146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' . ':' $@35 inner_statement_list
 
     ':'  shift, and go to state 864
 
 
-State 858
+state 858
 
   143 elseif_list: elseif_list T_ELSEIF '(' expr ')' $@34 . statement
 
@@ -21875,7 +21875,7 @@
     class_constant                     go to state 110
 
 
-State 859
+state 859
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   121 for_statement: ':' inner_statement_list . T_ENDFOR ';'
@@ -21887,35 +21887,35 @@
     $@4  go to state 347
 
 
-State 860
+state 860
 
   123 foreach_statement: ':' inner_statement_list T_ENDFOREACH ';' .
 
     $default  reduce using rule 123 (foreach_statement)
 
 
-State 861
+state 861
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 . '{' inner_statement_list '}' $@26 additional_catches
 
     '{'  shift, and go to state 867
 
 
-State 862
+state 862
 
   203 class_variable_declaration: class_variable_declaration ',' T_VARIABLE '=' static_scalar .
 
     $default  reduce using rule 203 (class_variable_declaration)
 
 
-State 863
+state 863
 
   187 class_statement: method_modifiers function is_reference T_STRING $@37 '(' parameter_list . ')' method_body
 
     ')'  shift, and go to state 868
 
 
-State 864
+state 864
 
   146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' . $@35 inner_statement_list
 
@@ -21924,21 +21924,21 @@
     $@35  go to state 869
 
 
-State 865
+state 865
 
   143 elseif_list: elseif_list T_ELSEIF '(' expr ')' $@34 statement .
 
     $default  reduce using rule 143 (elseif_list)
 
 
-State 866
+state 866
 
   121 for_statement: ':' inner_statement_list T_ENDFOR . ';'
 
     ';'  shift, and go to state 870
 
 
-State 867
+state 867
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' . inner_statement_list '}' $@26 additional_catches
 
@@ -21947,7 +21947,7 @@
     inner_statement_list  go to state 871
 
 
-State 868
+state 868
 
   187 class_statement: method_modifiers function is_reference T_STRING $@37 '(' parameter_list ')' . method_body
 
@@ -21957,7 +21957,7 @@
     method_body  go to state 874
 
 
-State 869
+state 869
 
   146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' $@35 . inner_statement_list
 
@@ -21966,14 +21966,14 @@
     inner_statement_list  go to state 875
 
 
-State 870
+state 870
 
   121 for_statement: ':' inner_statement_list T_ENDFOR ';' .
 
     $default  reduce using rule 121 (for_statement)
 
 
-State 871
+state 871
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list . '}' $@26 additional_catches
@@ -21985,14 +21985,14 @@
     $@4  go to state 347
 
 
-State 872
+state 872
 
   188 method_body: ';' .
 
     $default  reduce using rule 188 (method_body)
 
 
-State 873
+state 873
 
   189 method_body: '{' . inner_statement_list '}'
 
@@ -22001,14 +22001,14 @@
     inner_statement_list  go to state 877
 
 
-State 874
+state 874
 
   187 class_statement: method_modifiers function is_reference T_STRING $@37 '(' parameter_list ')' method_body .
 
     $default  reduce using rule 187 (class_statement)
 
 
-State 875
+state 875
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' $@35 inner_statement_list .
@@ -22021,7 +22021,7 @@
     $@4  go to state 347
 
 
-State 876
+state 876
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' . $@26 additional_catches
 
@@ -22030,7 +22030,7 @@
     $@26  go to state 878
 
 
-State 877
+state 877
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
   189 method_body: '{' inner_statement_list . '}'
@@ -22042,7 +22042,7 @@
     $@4  go to state 347
 
 
-State 878
+state 878
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 . additional_catches
 
@@ -22055,28 +22055,28 @@
     additional_catch              go to state 883
 
 
-State 879
+state 879
 
   189 method_body: '{' inner_statement_list '}' .
 
     $default  reduce using rule 189 (method_body)
 
 
-State 880
+state 880
 
    90 additional_catch: T_CATCH . '(' fully_qualified_class_name @27 T_VARIABLE ')' $@28 '{' inner_statement_list '}'
 
     '('  shift, and go to state 884
 
 
-State 881
+state 881
 
    81 unticked_statement: T_TRY $@22 '{' inner_statement_list '}' T_CATCH '(' $@23 fully_qualified_class_name $@24 T_VARIABLE ')' $@25 '{' inner_statement_list '}' $@26 additional_catches .
 
     $default  reduce using rule 81 (unticked_statement)
 
 
-State 882
+state 882
 
    84 additional_catches: non_empty_additional_catches .
    87 non_empty_additional_catches: non_empty_additional_catches . additional_catch
@@ -22088,14 +22088,14 @@
     additional_catch  go to state 885
 
 
-State 883
+state 883
 
    86 non_empty_additional_catches: additional_catch .
 
     $default  reduce using rule 86 (non_empty_additional_catches)
 
 
-State 884
+state 884
 
    90 additional_catch: T_CATCH '(' . fully_qualified_class_name @27 T_VARIABLE ')' $@28 '{' inner_statement_list '}'
 
@@ -22107,14 +22107,14 @@
     fully_qualified_class_name  go to state 886
 
 
-State 885
+state 885
 
    87 non_empty_additional_catches: non_empty_additional_catches additional_catch .
 
     $default  reduce using rule 87 (non_empty_additional_catches)
 
 
-State 886
+state 886
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name . @27 T_VARIABLE ')' $@28 '{' inner_statement_list '}'
 
@@ -22123,21 +22123,21 @@
     @27  go to state 887
 
 
-State 887
+state 887
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 . T_VARIABLE ')' $@28 '{' inner_statement_list '}'
 
     T_VARIABLE  shift, and go to state 888
 
 
-State 888
+state 888
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE . ')' $@28 '{' inner_statement_list '}'
 
     ')'  shift, and go to state 889
 
 
-State 889
+state 889
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' . $@28 '{' inner_statement_list '}'
 
@@ -22146,14 +22146,14 @@
     $@28  go to state 890
 
 
-State 890
+state 890
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' $@28 . '{' inner_statement_list '}'
 
     '{'  shift, and go to state 891
 
 
-State 891
+state 891
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' $@28 '{' . inner_statement_list '}'
 
@@ -22162,7 +22162,7 @@
     inner_statement_list  go to state 892
 
 
-State 892
+state 892
 
    27 inner_statement_list: inner_statement_list . $@4 inner_statement
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' $@28 '{' inner_statement_list . '}'
@@ -22174,7 +22174,7 @@
     $@4  go to state 347
 
 
-State 893
+state 893
 
    90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' $@28 '{' inner_statement_list '}' .
 
